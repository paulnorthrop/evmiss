[{"path":"https://github.com/paulnorthrop/evmiss/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Paul J. Northrop. Author, maintainer, copyright holder. Emma S. Simpson. Author, copyright holder.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Northrop PJ, Simpson ES (2025). evmiss: Extreme Value Analyses Missing Data. R package version 1.0.0, https://github.com/paulnorthrop/evmiss, https://paulnorthrop.github.io/evmiss/.","code":"@Manual{,   title = {evmiss: Extreme Value Analyses with Missing Data},   author = {Paul J. Northrop and Emma S. Simpson},   year = {2025},   note = {R package version 1.0.0, https://github.com/paulnorthrop/evmiss},   url = {https://paulnorthrop.github.io/evmiss/}, }"},{"path":"https://github.com/paulnorthrop/evmiss/index.html","id":"extreme-value-analyses-with-missing-data","dir":"","previous_headings":"","what":"Extreme Value Analyses with Missing Data","title":"Extreme Value Analyses with Missing Data","text":"Performs likelihood-based extreme value inferences adjustment presence missing values. GEV distribution fitted block maxima using maximum likelihood estimation, GEV location scale parameter reflecting numbers non-missing raw values block. Bayesian version also provided. purposes comparison, options make adjustment missing values discard block maximum greater percentage underlying raw values missing. plot method provides set standard model diagnostic plots, appropriate adjustment made presence missing values. Example datasets containing missing values provided. evmiss package created accompany research paper Simpson, E. S. Northrop, P. J. (2025) Accounting missing data modelling block maxima.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/index.html","id":"an-example","dir":"","previous_headings":"","what":"An example","title":"Extreme Value Analyses with Missing Data","text":"main function evmiss gev_mle(), fits GEV distribution block maxima using maximum likelihood estimation, option make adjustment numbers non-missing raw values block. main adjustment based strong assumption missing values occur completely random. suppose block maximum MnM_n based full block length nn GEV(μ\\mu, σ\\sigma, ξ\\xi) distribution, distribution function G(x)G(x). Let nin_i number non-missing values block ii let MniM_{n_i} denote block maximum block. suppose MniM_{n_i} GEV(μ(ni)\\mu(n_i), σ(ni)\\sigma(n_i), ξ\\xi) distribution, μ(ni)=μ+σ[(ni/n)ξ−1]/ξ\\mu(n_i) = \\mu + \\sigma [(n_i/n)^\\xi -1] / \\xi, σ(ni)=σ(ni/n)ξ\\sigma(n_i) = \\sigma (n_i/n)^\\xi.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/index.html","id":"sea-surge-height-data","dir":"","previous_headings":"An example","what":"Sea surge height data","title":"Extreme Value Analyses with Missing Data","text":"illustrate using data BrestSurgeMaxima, data frame containing annual maximum sea surge heights (cm) Brest, France years 1846-2007 inclusive. addition annual maxima data frame includes notNA, number days year raw data available, n, number days year, , block length. function block_maxima() can used create data format raw time series information blocks defined. Alternatively, can provide raw time series directly gev_mle().","code":"library(evmiss) head(BrestSurgeMaxima) #>      maxima notNA   n block #> 1846 59.987   361 365     1 #> 1847 58.873   344 365     2 #> 1848 59.749   366 366     3 #> 1849 49.547   365 365     4 #> 1850 55.512   365 365     5 #> 1851 69.422   365 365     6"},{"path":"https://github.com/paulnorthrop/evmiss/index.html","id":"model-fitting","dir":"","previous_headings":"An example","what":"Model fitting","title":"Extreme Value Analyses with Missing Data","text":"obvious difference model fits estimated location parameter adjustment (52.27 cm) smaller adjustment used (52.89 cm). expected data contribute annual maximum missing observed annual maximum stochastically smaller unobserved maximum based full data. Alternatively, argument adjust gev_mle() numeric scalar block maximum greater adjust percent underlying raw values missing discarded fitting GEV distribution, adjustment made.","code":"# Make the adjustment fit_adjust <- gev_mle(BrestSurgeMaxima) summary(fit_adjust) #>  #> Call: #> gev_mle(data = BrestSurgeMaxima) #>  #>       Estimate Std. Error #> mu    52.89000     1.0650 #> sigma 11.84000     0.7361 #> xi    -0.02375     0.0445  # Make no adjustment fit_no_adjust <- gev_mle(BrestSurgeMaxima, adjust = FALSE) summary(fit_no_adjust) #>  #> Call: #> gev_mle(data = BrestSurgeMaxima, adjust = FALSE) #>  #>       Estimate Std. Error #> mu    52.27000    1.07300 #> sigma 12.09000    0.76170 #> xi    -0.03005    0.04388"},{"path":"https://github.com/paulnorthrop/evmiss/index.html","id":"model-diagnostic-plots","dir":"","previous_headings":"An example","what":"Model diagnostic plots","title":"Extreme Value Analyses with Missing Data","text":"plot method object returned gev_mle creates visual model diagnostics like described Coles (2001) implemented Heffernan Stephenson (2018), values plotted adjusted, necessary, presence missing values.  see overall GEV model fits data well, although largest annual maximum sea surge height lies outside profile-based 95% confidence interval relevant observation.","code":"plot(fit_adjust)"},{"path":"https://github.com/paulnorthrop/evmiss/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Extreme Value Analyses with Missing Data","text":"install development version GitHub:","code":"remotes::install_github(\"paulnorthrop/evmiss\")"},{"path":[]},{"path":"https://github.com/paulnorthrop/evmiss/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://github.com/paulnorthrop/evmiss/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://github.com/paulnorthrop/evmiss/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://github.com/paulnorthrop/evmiss/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://github.com/paulnorthrop/evmiss/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://github.com/paulnorthrop/evmiss/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://github.com/paulnorthrop/evmiss/reference/block_maxima.html","id":null,"dir":"Reference","previous_headings":"","what":"Block maxima — block_maxima","title":"Block maxima — block_maxima","text":"Extracts block maxima number non-missing observations per block.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/block_maxima.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Block maxima — block_maxima","text":"","code":"block_maxima(data, block_length, block)"},{"path":"https://github.com/paulnorthrop/evmiss/reference/block_maxima.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Block maxima — block_maxima","text":"data numeric vector containing time series raw data. block_length numeric scalar. Used calculate maxima disjoint blocks block_length contiguous values vector data. length(data) integer multiple block_length values end data constitute complete block length block_length discarded, without warning. block numeric vector length data. value block[] indicates block data[] falls. example, block provide year observation observed.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/block_maxima.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Block maxima — block_maxima","text":"list, class c(\"list\", \"block_maxima\", \"evmiss\"), containing following numeric vectors: maxima: block maxima. notNA: numbers non-missing observations block. n: maximal block length, , largest number values observed block. block contains missing values value maxima NA value notNA 0. block supplied vectors named using values block. Otherwise, vectors names.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/block_maxima.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Block maxima — block_maxima","text":"Exactly one arguments block_length block must supplied.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/block_maxima.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Block maxima — block_maxima","text":"","code":"## Simulate example data set.seed(7032025) data <- rexp(15)  # Create some missing values data[c(5, 7:8)] <- NA # 5 blocks (columns), each with 3 observations matrix(data, ncol = 5) #>            [,1]      [,2]       [,3]       [,4]       [,5] #> [1,] 0.05147985 0.7849467         NA 1.61767512 1.85907241 #> [2,] 0.17692329        NA         NA 0.08363226 0.40586358 #> [3,] 0.88829461 1.8383628 0.08814399 0.14537999 0.08440941 # Supplying block_length block_length <- 3 block_maxima(data, block_length = block_length) #> $maxima #> [1] 0.88829461 1.83836285 0.08814399 1.61767512 1.85907241 #>  #> $notNA #> [1] 3 2 1 3 3 #>  #> $n #> [1] 3 3 3 3 3 #>  #> attr(,\"class\") #> [1] \"list\"         \"block_maxima\" \"evmiss\"       # Supplying block block <- rep(1:5, each = 3) block_maxima(data, block = block) #> $maxima #>          1          2          3          4          5  #> 0.88829461 1.83836285 0.08814399 1.61767512 1.85907241  #>  #> $notNA #> 1 2 3 4 5  #> 3 2 1 3 3  #>  #> $n #> 1 2 3 4 5  #> 3 3 3 3 3  #>  #> attr(,\"class\") #> [1] \"list\"         \"block_maxima\" \"evmiss\"        ## Data with an incomplete block data <- c(data, 1:2)  # Supplying block_length (the extra 2 observations are ignored) block_length <- 3 block_maxima(data, block_length = block_length) #> $maxima #> [1] 0.88829461 1.83836285 0.08814399 1.61767512 1.85907241 #>  #> $notNA #> [1] 3 2 1 3 3 #>  #> $n #> [1] 3 3 3 3 3 #>  #> attr(,\"class\") #> [1] \"list\"         \"block_maxima\" \"evmiss\"       # Supplying block (with an extra group indicator) block <- c(block, 7, 7) block_maxima(data, block = block) #> $maxima #>          1          2          3          4          5          7  #> 0.88829461 1.83836285 0.08814399 1.61767512 1.85907241 2.00000000  #>  #> $notNA #> 1 2 3 4 5 7  #> 3 2 1 3 3 2  #>  #> $n #> 1 2 3 4 5 7  #> 3 3 3 3 3 2  #>  #> attr(,\"class\") #> [1] \"list\"         \"block_maxima\" \"evmiss\""},{"path":"https://github.com/paulnorthrop/evmiss/reference/BloomsburyOzone.html","id":null,"dir":"Reference","previous_headings":"","what":"Ozone levels at Bloomsbury, UK — BloomsburyOzone","title":"Ozone levels at Bloomsbury, UK — BloomsburyOzone","text":"Daily maximum ozone levels Bloomsbury London (UK) years 1992-2024 inclusive.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/BloomsburyOzone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ozone levels at Bloomsbury, UK — BloomsburyOzone","text":"","code":"BloomsburyOzone"},{"path":"https://github.com/paulnorthrop/evmiss/reference/BloomsburyOzone.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Ozone levels at Bloomsbury, UK — BloomsburyOzone","text":"BloomsburyOzone data frame 12054 rows 3 variables: Date: class \"Date\" format YYYY-MM-DD. Year: Values 1992-2024. Ozone: daily maximum ozone level \\(\\mu\\)g/m\\(^3\\).","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/BloomsburyOzone.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Ozone levels at Bloomsbury, UK — BloomsburyOzone","text":"Department Environment Food Rural Affair (DEFRA). London Bloomsbury monitoring site UK-AIR database Data Selector.","code":""},{"path":[]},{"path":"https://github.com/paulnorthrop/evmiss/reference/BloomsburyOzone.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ozone levels at Bloomsbury, UK — BloomsburyOzone","text":"","code":"head(BloomsburyOzone) #>         Date Year Ozone #> 1 1992-01-01 1992    NA #> 2 1992-01-02 1992    NA #> 3 1992-01-03 1992    NA #> 4 1992-01-04 1992    NA #> 5 1992-01-05 1992    NA #> 6 1992-01-06 1992    NA  # Time series plot of annual maxima ozone levels plot(BloomsburyOzone$Date, BloomsburyOzone$Ozone, xlab = \"year\",      ylab = \"ozone (micrograms / metre cubed)\", pch = 16)"},{"path":"https://github.com/paulnorthrop/evmiss/reference/BloomsburyOzoneMaxima.html","id":null,"dir":"Reference","previous_headings":"","what":"Annual maxima ozone levels at Bloomsbury, UK — BloomsburyOzoneMaxima","title":"Annual maxima ozone levels at Bloomsbury, UK — BloomsburyOzoneMaxima","text":"Annual maxima daily maximum ozone levels Bloomsbury London (UK) years 1992-2024 inclusive.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/BloomsburyOzoneMaxima.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annual maxima ozone levels at Bloomsbury, UK — BloomsburyOzoneMaxima","text":"","code":"BloomsburyOzoneMaxima"},{"path":"https://github.com/paulnorthrop/evmiss/reference/BloomsburyOzoneMaxima.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Annual maxima ozone levels at Bloomsbury, UK — BloomsburyOzoneMaxima","text":"BloomsburyOzoneMaxima data frame 33 rows (years 1992 2024) 4 variables: maxima: annual maximum ozone level \\(\\mu\\)g/m\\(^3\\). notNA : number days year raw data available. n : number days year (365 366). block : block number 1 year 1992 33 year 2024. row names BloomsburyOzoneMaxima years 1992:2024. raw data missing approximately \\(5\\%\\) days.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/BloomsburyOzoneMaxima.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Annual maxima ozone levels at Bloomsbury, UK — BloomsburyOzoneMaxima","text":"Department Environment Food Rural Affair (DEFRA). London Bloomsbury monitoring site UK-AIR database Data Selector.","code":""},{"path":[]},{"path":"https://github.com/paulnorthrop/evmiss/reference/BloomsburyOzoneMaxima.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annual maxima ozone levels at Bloomsbury, UK — BloomsburyOzoneMaxima","text":"","code":"head(BloomsburyOzoneMaxima) #>      maxima notNA   n block #> 1992    146   336 366     1 #> 1993    186   354 365     2 #> 1994    190   351 365     3 #> 1995    204   335 365     4 #> 1996    180   359 366     5 #> 1997    140   350 365     6  # Time series plot of annual maxima ozone levels plot(rownames(BloomsburyOzoneMaxima), BloomsburyOzoneMaxima$maxima,      ylab = \"ozone (micrograms / metre cubed)\", xlab = \"year\", pch = 16)   # Time series plot of proportion of non-missing days plot(rownames(BloomsburyOzoneMaxima),      BloomsburyOzoneMaxima$notNA / BloomsburyOzoneMaxima$n,      ylab = \"proportion of non-missing days\", xlab = \"year\", pch = 16)   # Plot ozone levels against the proportion of non-missing days plot(BloomsburyOzoneMaxima$notNA / BloomsburyOzoneMaxima$n,      BloomsburyOzoneMaxima$maxima,      ylab = \"ozone (micrograms / metre cubed)\",      xlab = \"proportion of non-missing days\", pch = 16)"},{"path":"https://github.com/paulnorthrop/evmiss/reference/BrestSurgeDays.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of days per month in 1846-2007 — BrestSurgeDays","title":"Number of days per month in 1846-2007 — BrestSurgeDays","text":"Number days month relevant Brest sea surge heights data BrestSurgeMaxima.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/BrestSurgeDays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of days per month in 1846-2007 — BrestSurgeDays","text":"","code":"BrestSurgeDays"},{"path":"https://github.com/paulnorthrop/evmiss/reference/BrestSurgeDays.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Number of days per month in 1846-2007 — BrestSurgeDays","text":"BrestSurgeDays data frame 162 rows (years 1846 2007) 12 variables (one month year). value data frame gives number days surge height data month question. row names BrestSurgeMaxima years 1946:2007 column names abbreviated names months.","code":""},{"path":[]},{"path":"https://github.com/paulnorthrop/evmiss/reference/BrestSurgeDays.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of days per month in 1846-2007 — BrestSurgeDays","text":"","code":"head(BrestSurgeDays) #>      Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec #> 1846  31  28  31  30  31  30  31  31  30  31  30  31 #> 1847  31  28  31  30  31  30  31  31  30  31  30  31 #> 1848  31  29  31  30  31  30  31  31  30  31  30  31 #> 1849  31  28  31  30  31  30  31  31  30  31  30  31 #> 1850  31  28  31  30  31  30  31  31  30  31  30  31 #> 1851  31  28  31  30  31  30  31  31  30  31  30  31"},{"path":"https://github.com/paulnorthrop/evmiss/reference/BrestSurgeMaxima.html","id":null,"dir":"Reference","previous_headings":"","what":"Annual maxima sea surge heights at Brest, France — BrestSurgeMaxima","title":"Annual maxima sea surge heights at Brest, France — BrestSurgeMaxima","text":"Annual maxima sea surge heights near high tide Brest tide gauge station (France) years 1846-2007 inclusive.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/BrestSurgeMaxima.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annual maxima sea surge heights at Brest, France — BrestSurgeMaxima","text":"","code":"BrestSurgeMaxima"},{"path":"https://github.com/paulnorthrop/evmiss/reference/BrestSurgeMaxima.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Annual maxima sea surge heights at Brest, France — BrestSurgeMaxima","text":"BrestSurgeMaxima data frame 162 rows (years 1846 2007) 4 variables: maxima: annual maximum surge height high tide cm. notNA : number days year raw data available. n : number days year (365 366). block : block number 1 year 1846 162 year 2007. row names BrestSurgeMaxima years 1946:2007. raw data missing approximately \\(9\\%\\) days.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/BrestSurgeMaxima.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Annual maxima sea surge heights at Brest, France — BrestSurgeMaxima","text":"dataset Brest Renext R package, specifically Brest$OTdata Brest$OTmissing. Originally, source https://data.shom.fr/.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/BrestSurgeMaxima.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Annual maxima sea surge heights at Brest, France — BrestSurgeMaxima","text":"Deville Y. Bardet L. (2023). Renext: Renewal Method Extreme Values Extrapolation. R package version 3.1-4. doi:10.32614/CRAN.package.Renext","code":""},{"path":[]},{"path":"https://github.com/paulnorthrop/evmiss/reference/BrestSurgeMaxima.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annual maxima sea surge heights at Brest, France — BrestSurgeMaxima","text":"","code":"head(BrestSurgeMaxima) #>      maxima notNA   n block #> 1846 59.987   361 365     1 #> 1847 58.873   344 365     2 #> 1848 59.749   366 366     3 #> 1849 49.547   365 365     4 #> 1850 55.512   365 365     5 #> 1851 69.422   365 365     6  # Time series plot of annual maxima surges plot(rownames(BrestSurgeMaxima), BrestSurgeMaxima$maxima,      ylab = \"surge (cm)\", xlab = \"year\", pch = 16)   # Time series plot of proportion of non-missing days plot(rownames(BrestSurgeMaxima), BrestSurgeMaxima$notNA / BrestSurgeMaxima$n,      ylab = \"proportion of non-missing days\", xlab = \"year\", pch = 16)   # Plot surges against the proportion of non-missing days plot(BrestSurgeMaxima$notNA / BrestSurgeMaxima$n, BrestSurgeMaxima$maxima,      ylab = \"surge (cm)\", xlab = \"proportion of non-missing days\", pch = 16)"},{"path":"https://github.com/paulnorthrop/evmiss/reference/BrestSurgeMissing.html","id":null,"dir":"Reference","previous_headings":"","what":"Missing values in sea surge heights at Brest, France — BrestSurgeMissing","title":"Missing values in sea surge heights at Brest, France — BrestSurgeMissing","text":"Numbers missing values month Brest sea surge heights data BrestSurgeMaxima.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/BrestSurgeMissing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Missing values in sea surge heights at Brest, France — BrestSurgeMissing","text":"","code":"BrestSurgeMissing"},{"path":"https://github.com/paulnorthrop/evmiss/reference/BrestSurgeMissing.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Missing values in sea surge heights at Brest, France — BrestSurgeMissing","text":"BrestSurgeMissing data frame 162 rows (years 1846 2007) 12 variables (one month year). value data frame gives number days surge height data missing month question. row names BrestSurgeMaxima years 1946:2007 column names abbreviated names months.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/BrestSurgeMissing.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Missing values in sea surge heights at Brest, France — BrestSurgeMissing","text":"dataset Brest Renext R package, specifically Brest$OTmissing. Originally, source https://data.shom.fr/.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/BrestSurgeMissing.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Missing values in sea surge heights at Brest, France — BrestSurgeMissing","text":"Deville Y. Bardet L. (2023). Renext: Renewal Method Extreme Values Extrapolation. R package version 3.1-4. doi:10.32614/CRAN.package.Renext","code":""},{"path":[]},{"path":"https://github.com/paulnorthrop/evmiss/reference/BrestSurgeMissing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Missing values in sea surge heights at Brest, France — BrestSurgeMissing","text":"","code":"head(BrestSurgeMissing) #>      Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec #> 1846   4   0   0   0   0   0   0   0   0   0   0   0 #> 1847  21   0   0   0   0   0   0   0   0   0   0   0 #> 1848   0   0   0   0   0   0   0   0   0   0   0   0 #> 1849   0   0   0   0   0   0   0   0   0   0   0   0 #> 1850   0   0   0   0   0   0   0   0   0   0   0   0 #> 1851   0   0   0   0   0   0   0   0   0   0   0   0  # Proportion of missing values by year propn_year <- rowSums(BrestSurgeMissing) /   days_in_year(rownames(BrestSurgeMissing)) plot(rownames(BrestSurgeMissing), propn_year,      ylab = \"proportion of missing values\", xlab = \"year\", pch = 16)   # Proportion of missing values by year and month propn_year_month <- BrestSurgeMissing / BrestSurgeDays  # Proportion of missing values by month plot(1:12, colMeans(propn_year_month), axes = FALSE,         ylab = \"proportion of missing values\", xlab = \"month\", pch = 16) axis(1, at = 1:12, labels = 1:12) axis(2) box()"},{"path":"https://github.com/paulnorthrop/evmiss/reference/confint_gev_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for objects of class ","title":"Methods for objects of class ","text":"Methods objects class \"confint_gev\" returned confint.evmiss.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/confint_gev_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for objects of class ","text":"","code":"# S3 method for class 'confint_gev' print(x, ...)  # S3 method for class 'confint_gev' plot(x, parm = c(\"mu\", \"sigma\", \"xi\"), add = TRUE, digits = 2, ...)"},{"path":"https://github.com/paulnorthrop/evmiss/reference/confint_gev_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for objects of class ","text":"x object inheriting class \"confint_gev\", object returned call confint.evmiss. ... arguments. print.confint_gev pass arguments print. plot.confint_gev pass graphical parameters plot create initial plot profile log-likelihood. parm character scalar specifying parameter profile log-likelihood plotted. Must single component c(\"mu\", \"sigma\", \"xi\"). add logical scalar. add = TRUE plot annotated horizontal line indicating critical value profile log-likelihood used calculate confidence limits, vertical lines indicating values limits legend stating confidence interval. digits integer. Passed signif round confidence limits legend, add = TRUE.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/confint_gev_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Methods for objects of class ","text":"print.confint_gev: argument x returned, invisibly. plot.confint_gev: nothing. plots produced.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/confint_gev_methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Methods for objects of class ","text":"print.confint_gev. numeric matrix 2 columns giving lower upper confidence limits parameters specified argument parm confint.evmiss. columns labelled (1-level)/2 1-(1-level)/2, expressed percentage, default 2.5% 97.5%. plot.confint_gev. plot produced profile log-likelihood parameter chosen parm. parameter values used profile log-likelihood call confint.evmiss included, faster = TRUE used plot smooth curve triangular middle.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/confint_gev_methods.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Methods for objects of class ","text":"See evmiss_methods.","code":""},{"path":[]},{"path":"https://github.com/paulnorthrop/evmiss/reference/confint_return_level_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for objects of class ","title":"Methods for objects of class ","text":"Methods objects class \"confint_return_level\" returned confint.return_level.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/confint_return_level_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for objects of class ","text":"","code":"# S3 method for class 'confint_return_level' print(x, ...)  # S3 method for class 'confint_return_level' plot(x, parm = 1, add = TRUE, digits = 2, ...)"},{"path":"https://github.com/paulnorthrop/evmiss/reference/confint_return_level_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for objects of class ","text":"x object inheriting class \"confint_return_level\", result call confint.return_level. ... arguments. print.confint_return_level pass arguments print). plot.confint_return_level pass graphical parameters plot create initial plot profile log-likelihood. parm integer scalar. component, , return level, x require confidence interval. add logical scalar. add = TRUE plot annotated horizontal line indicating critical value profile log-likelihood used calculate confidence limits, vertical lines indicating values limits legend stating confidence interval. digits integer. Passed signif round confidence limits legend, add = TRUE.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/confint_return_level_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Methods for objects of class ","text":"print.confint_return_level: argument x returned, invisibly. plot.confint_return_level: numeric vector containing confidence interval return level chosen plot.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/confint_return_level_methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Methods for objects of class ","text":"print.confint_return_level. numeric matrix 2 columns giving lower upper confidence limits parameters specified argument parm confint.return_level. columns labelled (1-level)/2 1-(1-level)/2, expressed percentage, default 2.5% 97.5%. plot.confint.return_level. plot produced profile log-likelihood parameter chosen parm.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/confint_return_level_methods.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Methods for objects of class ","text":"See return_level_methods.","code":""},{"path":[]},{"path":"https://github.com/paulnorthrop/evmiss/reference/days.html","id":null,"dir":"Reference","previous_headings":"","what":"Days in a year or in a month — days","title":"Days in a year or in a month — days","text":"Returns number days vector years months.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/days.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Days in a year or in a month — days","text":"","code":"days_in_year(year)  days_in_month(year, month)"},{"path":"https://github.com/paulnorthrop/evmiss/reference/days.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Days in a year or in a month — days","text":"year integer vector. years interest. month integer vector. subset 1:12.months interest.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/days.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Days in a year or in a month — days","text":"numeric vector numbers days years year months specified year month.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/days.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Days in a year or in a month — days","text":"length output vector equal length month. argument year recycled length output vector necessary.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/days.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Days in a year or in a month — days","text":"","code":"days_in_year(1999:2025) #>  [1] 365 366 365 365 365 366 365 365 365 366 365 365 365 366 365 365 365 366 365 #> [20] 365 365 366 365 365 365 366 365  days_in_month(2024, 1:12) #>  [1] 31 29 31 30 31 30 31 31 30 31 30 31 days_in_month(2025, 1:12) #>  [1] 31 28 31 30 31 30 31 31 30 31 30 31 days_in_month(2024:2025, 1:3) #> [1] 31 29 31 31 28 31"},{"path":"https://github.com/paulnorthrop/evmiss/reference/evmiss-internal.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal evmiss functions — evmiss-internal","title":"Internal evmiss functions — evmiss-internal","text":"Internal evmiss functions","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/evmiss-internal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal evmiss functions — evmiss-internal","text":"","code":"negated_gev_loglik(parameters, maxima_notNA, adjust, big_val = Inf)  discard_maxima(maxima_notNA, discard)  negated_gev_loglik_ret_levs(   parameters,   maxima_notNA,   adjust,   m,   npy,   big_val = Inf )  faster_profile_ci(   negated_loglik_fn,   which = 1,   level,   mle,   ci_sym_mat,   inc,   epsilon,   ci_init,   ... )  profile_ci(negated_loglik_fn, which = 1, level, mle, inc, epsilon, ...)  box_cox(x, lambda = 1, gm = 1, lambda_tol = 1e-06)  box_cox_vec(x, lambda = 1, lambda_tol = 1e-06)  box_cox_deriv(x, lambda = 1, lambda_tol = 1/50, poly_order = 3)  gev_init(maxima_notNA, init_method = \"quartiles\")  gev_profile_init(data, mu, sigma, xi)  call_gev_profile_init(data, which, par_value)  return_level_profile_init(gev_object, level, mult, epsilon, m, npy)  lagrangianInterpolation(x0, y0)  gev_pp(x, adjust, level, ...)  gev_qq(x, adjust, level, ...)  gev_rl(x, adjust, m, level, profile, num, npy, ...)  gev_his(x, adjust, ...)  pp_and_qq_plot_fn(x, y, bands, which, ..., xlab, ylab = \"empirical\", main)  return_level_plot_fn(   x,   y,   empirical,   at,   labels,   ...,   type = \"l\",   xlab = \"return period\",   ylab = \"return level\",   main = \"return level plot\",   xaxt = \"n\" )  density_plot_fn(   x,   mle,   mu_full,   sigma_full,   ...,   xlab = \"block maxima\",   ylab = \"density\",   main = \"density plot\" )  uniform_confidence_bands(b, k, level)  gev_confidence_bands(b, k, level, mle)  rl_sim_study(   object,   return_periods,   level,   profile,   mult,   faster,   epsilon,   timeout )  rl_reorder_results(rl_list, profile, return_periods)  merge_two_lists(list1, list2)  select_approaches(x, the_approaches, approach)  pairs_lwd_hack(x, ...)"},{"path":"https://github.com/paulnorthrop/evmiss/reference/evmiss-internal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal evmiss functions — evmiss-internal","text":"functions intended called user.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/evmiss-package.html","id":null,"dir":"Reference","previous_headings":"","what":"evmiss: Extreme Value Analyses with Missing Data — evmiss-package","title":"evmiss: Extreme Value Analyses with Missing Data — evmiss-package","text":"Performs likelihood-based extreme value inferences adjustment presence missing values. Generalised Extreme Value (GEV) distribution fitted block maxima using maximum likelihood estimation, GEV location scale parameters reflecting numbers non-missing raw values block. Bayesian version also provided. purposes comparison, options make adjustment missing values discard block maximum greater percentage underlying raw values missing. evmiss package created accompany research paper Simpson, E. S. Northrop, P. J. (2025) Accounting missing data modelling block maxima.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/evmiss-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"evmiss: Extreme Value Analyses with Missing Data — evmiss-package","text":"main functions gev_mle: maximum likelihood inference block maxima based GEV distributon, S3 methods including confint. gev_bayes: Bayesian inference block maxima based GEV distributon. objects returned gev_mle, inferences return levels performed gev_return, S3 methods including confint. function gev_influence quantifies influence individual extreme (small large) block maxima maximum likelihood estimators GEV parameters. following example datasets provided. BloomsburyOzoneMaxima: Annual maxima ozone levels Bloomsbury, London, UK, 1992-2024. PlymouthOzoneMaxima: Annual maxima ozone levels Plymouth, Devon, UK, 1998-2024. BrestSurgeMaxima: Annual maxima surge heights Brest, France, 1846-2007.","code":""},{"path":[]},{"path":"https://github.com/paulnorthrop/evmiss/reference/evmiss-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"evmiss: Extreme Value Analyses with Missing Data — evmiss-package","text":"Maintainer: Paul J. Northrop p.northrop@ucl.ac.uk [copyright holder] Authors: Emma S. Simpson [copyright holder]","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/evmiss_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for objects of class ","title":"Methods for objects of class ","text":"Methods objects class \"evmiss\" returned gev_mle.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/evmiss_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for objects of class ","text":"","code":"# S3 method for class 'evmiss' coef(object, ...)  # S3 method for class 'evmiss' vcov(object, ...)  # S3 method for class 'evmiss' nobs(object, ...)  # S3 method for class 'evmiss' logLik(object, ...)  # S3 method for class 'evmiss' summary(object, digits = max(3, getOption(\"digits\") - 3L), ...)  # S3 method for class 'summary.evmiss' print(x, ...)  # S3 method for class 'evmiss' confint(   object,   parm = \"all\",   level = 0.95,   profile = FALSE,   mult = 2,   faster = FALSE,   epsilon = 1e-04,   ... )  # S3 method for class 'evmiss' plot(   x,   adjust = TRUE,   which = c(\"pp\", \"qq\", \"return\", \"density\"),   m = c(2, 10, 100, 1000),   level = 0.95,   profile = TRUE,   num,   npy = 1,   ... )"},{"path":"https://github.com/paulnorthrop/evmiss/reference/evmiss_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for objects of class ","text":"object object inheriting class \"evmiss\", result call gev_mle. ... arguments. used following cases. plot.evmiss: pass graphical parameters graphical functions plot, matplot, abline, lines, matlines points. particular, col, lty lwd may used control colour, type width lines pch type plotting symbol. data points coloured black plots, changed. print.summary.evmiss: pass arguments print. digits integer. Passed signif round values summary. x object returned summary.evmiss. parm character vector specifying parameters confidence intervals calculated. default, = \"\", produces confidence intervals parameters, , \\(\\mu\\), \\(\\sigma\\) \\(\\xi\\). Otherwise, parm must subset c(\"mu\", \"sigma\", \"xi\"). level confidence level required.  numeric scalar (0, 1). profile logical scalar. TRUE confidence intervals based profile log-likelihood returned.  FALSE intervals based approximate large sample normal theory, symmetric MLE, returned. mult positive numeric scalar. Controls increment parameter interest increased/decreased profiling /MLE. increment mult * se / 100 se estimated standard error estimator parameter. Decreasing mult profiles points slower. default, mult = 2 sufficiently small produce smooth looking plot profile log-likelihood using plot.confint_gev. estimate confidence limits quickly, value mult can increased /argument faster set TRUE. faster logical scalar. faster = TRUE profiling log-likelihood search lower (upper) confidence limit started corresponding symmetric lower (upper) confidence limit. epsilon relevant profile = TRUE. numeric vector values determine accuracy confidence limits. epsilon recycled length parameter vector parm. epsilon[] > 0 value passed argument epsilon itp::itp function, estimates parameter values profile log-likelihood parameter drops value defines confidence limits, profiling successful finding interval within value lies. epsilon[] < 0 quadratic interpolation used, tend faster. epsilon[] = 0 linear interpolation used, faster still. adjust adjust = TRUE diagnostic plots produced plot.evmiss adjusted number non-missing observations contributing block maximum. Otherwise, adjustment made. supplied, must either character scalar, one \"pp\", \"qq\", \"return\" \"density\" numeric scalar 1:4, 1 corresponding \"pp\" etc. missing four plots produced 2 2 display. m numeric vector return periods label horizontal axis return level plot. Along data, smallest largest return period values m influence range return periods return level estimates plotted. values m must greater 1. num integer scalar. number return level estimates calculate produce return level curve pointwise confidence limits return level plot. default setting approximately 5 times log(max(m), base = 10). profile = TRUE reducing num speed calculation confidence limits, expense reduction smoothness curves. npy numeric scalar.  number \\(n_{py}\\) block maxima per year. blocks length 1 year npy = 1. used return level plot.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/evmiss_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Methods for objects of class ","text":"coef.evmiss: numeric vector length 3 names c(\"mu\", \"sigma\", \"xi\").  MLEs parameters \\(\\mu\\), \\(\\sigma\\) \\(\\xi\\). vcov.evmiss: \\(3 \\times 3\\) matrix row column names c(\"mu\", \"sigma\", \"xi\"). estimated variance-covariance matrix model parameters \\(\\mu\\), \\(\\sigma\\) \\(\\xi\\). nobs.evmiss: numeric scalar. number maxima used model fit. logLik.evmiss: object class \"logLik\": numeric scalar value equal maximised log-likelihood. returned object also attributes nobs, number maxima used model fit \"df\" (degrees freedom), equal number total number parameters estimated (3). summary.evmiss: object class \"summary.evmiss\" containing original function call matrix estimates estimated standard errors row names c(\"mu\", \"sigma\", \"xi\").  object printed print.summary.evmiss. print.summary.evmiss: argument x returned, invisibly. confint.evmiss: object class c(\"confint_gev\", \"evmiss\"). numeric matrix 2 columns giving lower upper confidence limits parameter. columns labelled (1-level)/2 1-(1-level)/2, expressed percentage, default 2.5% 97.5%. row names names parameters supplied parm. ordering \"mu\", \"sigma\", \"xi\" retained regardless ordering parameters parm. profile = TRUE returned object extra attributes crit, level for_plot. latter named list length 3 components mu, sigma xi. components 2-column numeric matrix. first column (named mu_values etc) contains values parameter second column corresponding values profile log-likelihood. profile log-likelihood equal attribute crit limits confidence interval. attribute level input argument level. plot.summary.evmiss: nothing, plots produced.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/evmiss_methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Methods for objects of class ","text":"plots produced plot.evmiss similar form visual diagnostics ismev package described Coles (2001), , probability plot (= \"pp\" = 1), quantile plot (=\"qq\" = 2), return level plot (= \"return\" = 3) histogram block maxima fitted GEV density superimposed (= \"density\" = 4). Pointwise confidence bands level level added probability plot quantile plot. default setting confidence intervals return level plot produced plot.evmiss profile = TRUE, uses gev_return confint.return_level. plot takes longer produce, avoids unrealistic feature lower confidence limits decreasing extrapolate long return periods. adjust = TRUE empirical values based observed block maxima adjusted number non-missing raw observations block based fitted GEV parameter values reduced block sizes. Passing adjust = FALSE sensible, , missing data, can serve show making adjustment necessary give correct impression well model fitted data. confint.evmiss, default, epsilon = -1, work well enough circumstances, achieve specific accuracy set epsilon small positive value, example, epsilon = 1e-4.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/evmiss_methods.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Methods for objects of class ","text":"Coles, S. G. (2001) Introduction Statistical Modeling Extreme Values, Springer-Verlag, London. doi:10.1007/978-1-4471-3675-0_3 Heffernan, J. E. Stephenson, . G. (2018). ismev: Introduction Statistical Modeling Extreme Values. R package version 1.42. doi:10.32614/CRAN.package.ismev","code":""},{"path":[]},{"path":"https://github.com/paulnorthrop/evmiss/reference/evmiss_methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Methods for objects of class ","text":"","code":"## Plymouth ozone data  # Make adjustment for the numbers of non-missing values per block fit <- gev_mle(PlymouthOzoneMaxima) coef(fit) #>           mu        sigma           xi  #> 1.287713e+02 1.880807e+01 1.099327e-03  vcov(fit) #>               mu      sigma          xi #> mu    19.3747981 4.20796047 -0.29507393 #> sigma  4.2079605 6.94147798  0.01825292 #> xi    -0.2950739 0.01825292  0.02512590 nobs(fit) #> [1] 27 logLik(fit) #> 'log Lik.' -120.5328 (df=3) summary(fit) #>  #> Call: #> gev_mle(data = PlymouthOzoneMaxima) #>  #>        Estimate Std. Error #> mu    1.288e+02     4.4020 #> sigma 1.881e+01     2.6350 #> xi    1.099e-03     0.1585  ## Model diagnostic plots  # When profile = FALSE the return confidence limits are unrealistic # for long return periods plot(fit, profile = FALSE)   # Create the return level plot only # When profile = TRUE (the default) the confidence limits are fine # but the plot takes longer # For speed, we reduce the number, num, of points used to plot the curves plot(fit, which = 3, num = 8)   # If we do not reflect the adjustment in the plot then it gives a false # impression of how well the model has fitted the data plot(fit, adjust = FALSE, profile = FALSE)   ## Confidence intervals  # Confidence limits that are symmetric about the respective MLEs confint(fit) #>              2.5%       97.5% #> mu    120.1441804 137.3984539 #> sigma  13.6442183  23.9719290 #> xi     -0.3095775   0.3117762  # Calling confint to produce a smooth profile log-likelihood plot x <- confint(fit, profile = TRUE) x #>              2.5%       97.5% #> mu    120.3550195 137.9594426 #> sigma  14.5976855  25.5383429 #> xi     -0.3237415   0.3159855 plot(x, parm = \"xi\")   # Doing this more quickly when we only want the approximate confidence limits x <- confint(fit, profile = TRUE, mult = 32, faster = TRUE) x #>              2.5%       97.5% #> mu    120.3574766 137.9594215 #> sigma  14.8182568  25.5383840 #> xi     -0.3229961   0.3158122 plot(x, parm = \"xi\", type = \"b\")"},{"path":"https://github.com/paulnorthrop/evmiss/reference/gev_bayes.html","id":null,"dir":"Reference","previous_headings":"","what":"GEV Bayesian Inference with Adjustment for Missing Data — gev_bayes","title":"GEV Bayesian Inference with Adjustment for Missing Data — gev_bayes","text":"Performs Bayesian inference using GEV distribution using block maxima, option make adjustment numbers non-missing raw values block.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/gev_bayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GEV Bayesian Inference with Adjustment for Missing Data — gev_bayes","text":"","code":"gev_bayes(   data,   block_length,   block,   adjust = TRUE,   discard = 0,   init = \"quartiles\",   prior = revdbayes::set_prior(prior = \"flat\", model = \"gev\"),   n = 1000,   ... )"},{"path":"https://github.com/paulnorthrop/evmiss/reference/gev_bayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GEV Bayesian Inference with Adjustment for Missing Data — gev_bayes","text":"data Either numeric vector containing time series raw data, object returned block_maxima, list components maxima, notNA n, data frame named list containing information (variables maxima, notNA n) object returned block_maxima, data frame BrestSurgeMaxima. block_length numeric scalar. Used calculate maxima disjoint blocks block_length contiguous values vector data. length(data) integer multiple block_length values end data constitute complete block length block_length discarded, without warning. block numeric vector length data. value block[] indicates block data[] falls. example, block provide year observation observed. adjust logical scalar numeric scalar [0, 100]. adjust = TRUE adjustment, described Details, numbers non-missing values underlying block maximum performed. adjust = FALSE adjustment made, , block maxima treated underlying raw data missing values. discard numeric scalar. block maximum greater discard percent underlying raw values missing discarded. Whether adjustment missingness made block maxima remain determined adjust. init Either character scalar, one \"quartiles\" \"moments\", numeric vector length 3 giving initial estimates GEV location, scale shape parameters: \\(\\mu\\), \\(\\sigma\\) \\(\\xi\\). init = \"quartiles\" initial estimates \\(\\mu\\) \\(\\sigma\\) based sample quartiles block maxima, ignoring underlying numbers non-missing raw data, value 0 \\(\\xi\\). init = \"moments\" instead use sample mean variance maxima initial value 0.1 \\(\\xi\\). prior Specifies prior distribution GEV parameters. easily set using revdbayes::set_prior. default prior \\(\\pi(\\mu, \\sigma, \\xi) \\propto \\sigma^{-1}\\) \\(\\sigma > 0\\). See revdbayes::set_prior details. n non-negative integer. number values simulate posterior distribution \\((\\mu, \\sigma, \\xi)\\). ... arguments passed rust::ru.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/gev_bayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GEV Bayesian Inference with Adjustment for Missing Data — gev_bayes","text":"object returned rust::ru. following components added list model: = \"gev\". data,prior: inputs data prior. call: call gev_bayes. maxima: vector block maxima used fit model. notNA: number non-missing raw values maxima maxima based. n: maximal block length, , largest number values observed blocks. adjust: logical scalar indicating whether adjustment Details section gev_mle performed. TRUE input argument adjust TRUE. adjust,discard : values input arguments. class returned object c(\"evpost\", \"ru\", \"bayes\", \"evmiss\"). Objects class \"evpost\" print, summary plot S3 methods.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/gev_bayes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GEV Bayesian Inference with Adjustment for Missing Data — gev_bayes","text":"likelihood described gev_mle combined prior density provided prior produce, proportionality, posterior density \\((\\mu, \\sigma, \\xi)\\). function evaluate log-posterior passed rust::ru simulate random sample posterior distribution using generalised ratio--uniforms method, using relocation mode density origin increase efficiency. value init used initial estimate search posterior mode. Arguments rust::ru can passed via .... default setting trans = \"none\", , transformation margins, rotate = TRUE, rotation parameter axes improve isotropy view increasing efficiency.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/gev_bayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GEV Bayesian Inference with Adjustment for Missing Data — gev_bayes","text":"","code":"## Simulate data with missing values  set.seed(24032025) blocks <- 50 block_length <- 365  # Simulate raw data from an exponential distribution sdata <- sim_data(blocks = blocks, block_length = block_length)  block_length <- sdata$block_length # Sample from the posterior based on block maxima from full data post1 <- gev_bayes(sdata$data_full, block_length = block_length) summary(post1) #> ru bounding box:   #>                box        vals1       vals2        vals3 conv #> a        1.0000000  0.000000000  0.00000000  0.000000000    0 #> b1minus -0.2247368 -0.429004846  0.15974262 -0.110371644    0 #> b2minus -0.1621321 -0.019225412 -0.24818777  0.008851358    0 #> b3minus -0.1642482 -0.029047475  0.12881751 -0.250596916    0 #> b1plus   0.1879785  0.313252280  0.05827902 -0.054719278    0 #> b2plus   0.2363722 -0.006931975  0.44374854  0.063496607    0 #> b3plus   0.2210291 -0.022860500  0.15366682  0.392587554    0 #>  #> estimated probability of acceptance:   #> [1] 0.3014772 #>  #> sample summary  #>        mu            sigma              xi           #>  Min.   :5.293   Min.   :0.8603   Min.   :-0.26108   #>  1st Qu.:5.752   1st Qu.:1.1560   1st Qu.: 0.02199   #>  Median :5.891   Median :1.2526   Median : 0.10351   #>  Mean   :5.892   Mean   :1.2722   Mean   : 0.10836   #>  3rd Qu.:6.023   3rd Qu.:1.3770   3rd Qu.: 0.18551   #>  Max.   :6.622   Max.   :2.1174   Max.   : 0.55320    # Sample with adjustment for the number of non-missing values per block post2 <- gev_bayes(sdata$data_miss, block_length = block_length) summary(post2) #> ru bounding box:   #>                box        vals1       vals2       vals3 conv #> a        1.0000000  0.000000000  0.00000000  0.00000000    0 #> b1minus -0.2097759 -0.401170205  0.13635852 -0.09914656    0 #> b2minus -0.1494487 -0.022968875 -0.22890427  0.01842038    0 #> b3minus -0.1581289 -0.032708269  0.10926826 -0.24677015    0 #> b1plus   0.1721255  0.286609292  0.06011017 -0.05124685    0 #> b2plus   0.2234551 -0.007772628  0.43820186  0.12479461    0 #> b3plus   0.2014593 -0.045204764  0.14281383  0.35926041    0 #>  #> estimated probability of acceptance:   #> [1] 0.2907822 #>  #> sample summary  #>        mu            sigma              xi           #>  Min.   :5.280   Min.   :0.8527   Min.   :-0.18637   #>  1st Qu.:5.691   1st Qu.:1.0868   1st Qu.: 0.09059   #>  Median :5.824   Median :1.1877   Median : 0.16830   #>  Mean   :5.832   Mean   :1.2026   Mean   : 0.17431   #>  3rd Qu.:5.978   3rd Qu.:1.2979   3rd Qu.: 0.25386   #>  Max.   :6.691   Max.   :1.8310   Max.   : 0.62626    # Do not make the adjustment post3 <- gev_bayes(sdata$data_miss, block_length = block_length,                    adjust = FALSE) summary(post3) #> ru bounding box:   #>                box       vals1       vals2        vals3 conv #> a        1.0000000  0.00000000  0.00000000  0.000000000    0 #> b1minus -0.2082312 -0.40085910  0.14744745 -0.103149590    0 #> b2minus -0.1478147 -0.01954635 -0.22582419  0.005746205    0 #> b3minus -0.1562453 -0.03627886  0.11614224 -0.243488523    0 #> b1plus   0.1704187  0.28270962  0.05796295 -0.045892040    0 #> b2plus   0.2170089 -0.02254364  0.40616047  0.037048161    0 #> b3plus   0.2016273 -0.03106869  0.12799587  0.361525655    0 #>  #> estimated probability of acceptance:   #> [1] 0.2963841 #>  #> sample summary  #>        mu            sigma              xi          #>  Min.   :4.793   Min.   :0.7996   Min.   :-0.1796   #>  1st Qu.:5.326   1st Qu.:1.0626   1st Qu.: 0.0812   #>  Median :5.461   Median :1.1525   Median : 0.1511   #>  Mean   :5.460   Mean   :1.1667   Mean   : 0.1620   #>  3rd Qu.:5.583   3rd Qu.:1.2562   3rd Qu.: 0.2332   #>  Max.   :6.128   Max.   :1.6993   Max.   : 0.5507    # Remove all block maxima with greater than 25% missing values and # do not make the adjustment post4 <- gev_bayes(sdata$data_miss, block_length = block_length,                    adjust = FALSE, discard = 25) summary(post4) #> ru bounding box:   #>                box       vals1      vals2       vals3 conv #> a        1.0000000  0.00000000  0.0000000  0.00000000    0 #> b1minus -0.4182415 -1.10654891  0.4865155 -0.30734329    0 #> b2minus -0.1955913 -0.03971873 -0.2912431  0.02574945    0 #> b3minus -0.2198241 -0.12004301  0.2127574 -0.34472904    0 #> b1plus   0.2516484  0.44696188  0.1351107 -0.14020089    0 #> b2plus   0.3656681 -0.06477154  0.8800835  0.33944115    0 #> b3plus   0.3040806 -0.09814424  0.2208264  0.57640392    0 #>  #> estimated probability of acceptance:   #> [1] 0.2318572 #>  #> sample summary  #>        mu            sigma              xi          #>  Min.   :4.704   Min.   :0.5289   Min.   :-0.2197   #>  1st Qu.:5.227   1st Qu.:0.9553   1st Qu.: 0.2562   #>  Median :5.391   Median :1.1013   Median : 0.4027   #>  Mean   :5.406   Mean   :1.1407   Mean   : 0.4197   #>  3rd Qu.:5.561   3rd Qu.:1.2873   3rd Qu.: 0.5627   #>  Max.   :6.471   Max.   :2.3790   Max.   : 1.5490    ## Brest sea surge data  post <- gev_bayes(BrestSurgeMaxima) summary(post) #> ru bounding box:   #>                box        vals1       vals2       vals3 conv #> a        1.0000000  0.000000000  0.00000000  0.00000000    0 #> b1minus -0.4425320 -0.751499782  0.11680655 -0.06029664    0 #> b2minus -0.3842978 -0.021900294 -0.60490474  0.01227180    0 #> b3minus -0.3366002 -0.005334382  0.16770844 -0.49572108    0 #> b1plus   0.4169404  0.684808686  0.08450646 -0.03839377    0 #> b2plus   0.4752004 -0.024717120  0.83310983  0.02835543    0 #> b3plus   0.5203804 -0.003671959  0.20143312  0.93945441    0 #>  #> estimated probability of acceptance:   #> [1] 0.3097893 #>  #> sample summary  #>        mu            sigma              xi           #>  Min.   :48.82   Min.   : 9.356   Min.   :-0.11157   #>  1st Qu.:52.08   1st Qu.:11.463   1st Qu.:-0.04350   #>  Median :52.78   Median :11.947   Median :-0.01364   #>  Mean   :52.80   Mean   :11.973   Mean   :-0.01034   #>  3rd Qu.:53.48   3rd Qu.:12.455   3rd Qu.: 0.01702   #>  Max.   :56.78   Max.   :15.411   Max.   : 0.15123   plot(post)"},{"path":"https://github.com/paulnorthrop/evmiss/reference/gev_influence.html","id":null,"dir":"Reference","previous_headings":"","what":"GEV influence curves — gev_influence","title":"GEV influence curves — gev_influence","text":"Calculates influence function curves maximum likelihood estimators Generalised Extreme Value (GEV) parameters.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/gev_influence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GEV influence curves — gev_influence","text":"","code":"gev_influence(z, mu = 0, sigma = 1, xi = 0)  # S3 method for class 'gev_influence' plot(x, xvar = c(\"z\", \"y\"), sep_xi = TRUE, vlines, ...)"},{"path":"https://github.com/paulnorthrop/evmiss/reference/gev_influence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GEV influence curves — gev_influence","text":"z numeric vector. Values normal quantiles \\(z\\) calculate GEV influence function. See Details. mu, sigma, xi Numeric scalars supplying values GEV parameters \\(\\mu\\), \\(\\sigma\\) \\(\\xi\\). vectors recycled length longest vector. x object inheriting class \"gev_influence\", result call gev_influence. xvar logical scalar. xvar = \"z\" influence curves plotted standard normal quantiles x[, \"z\"]. xvar = \"y\" influence curves plotted corresponding GEV quantiles x[, \"y\"]. sep_xi logical scalar. sep_xi = TRUE separate vertical scales used \\(\\xi\\) \\((\\mu, \\sigma)\\). scale \\(\\xi\\) appears left scale \\((\\mu, \\sigma)\\) right. vlines numeric vector. vlines supplied black dashed vertical lines added plot values vlines horizontal axis. might used indicate values certain observations dataset. ... plot.gev_influence: pass graphical parameters graphical functions matplot legend. parameters col, lty lwd can used control line colour, type width, parameters usual order, , \\((\\mu, \\sigma, \\xi)\\).","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/gev_influence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GEV influence curves — gev_influence","text":"gev_influence: object class c(\"gev_influence\", \"matrix\", \"array\"), length(z) 5 numeric matrix. first two columns contain input values z corresponding values y. Columns 3-5 contain values GEV influence function \\(\\mu\\), \\(\\sigma\\) \\(\\xi\\) respectively values z. plot.gev_influence: nothing, plot produced.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/gev_influence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GEV influence curves — gev_influence","text":"influence function measures effect parameter estimator changing one observation sample. See Hampel (2005) , context extreme value analyses threshold exceedances, Davison Smith (1990). Let \\(\\theta = (\\mu, \\sigma, \\xi)\\). GEV influence curve defined, function observation \\(y\\), \\(IC(y) = \\{IC_{\\mu}(y), IC_{\\sigma}(y), IC_{\\xi}(y)\\} =   i_\\theta^{-1} {\\rm d}\\ell(y; \\theta)/{\\rm d} \\theta\\), \\(\\ell(y; \\theta)\\) GEV log-likelihood function \\(i_\\theta^{-1}\\) GEV expected information matrix. value \\(y\\) related \\(z\\) \\(y = G^{-1}\\{\\Phi(z)\\}\\), \\(\\Phi\\) \\(G\\) distribution functions standard normal GEV(\\(\\mu, \\sigma, \\xi\\)) distribution, respectively. Plotting influence curves standard normal z scale can help aid interpretation. value \\(IC(y)\\) invariant value \\(\\mu\\). given value \\(\\xi\\), values \\(IC_{\\mu}(y)\\) \\(IC_{\\sigma}(y)\\) scale scale parameter \\(\\sigma\\), , doubling \\(\\sigma\\) doubles \\(IC_{\\mu}(y)\\) \\(IC_{\\sigma}(y)\\). Typically, interest focuses shape parameter \\(\\xi\\), input scale parameter \\(\\sigma\\) large may hide influence \\(y\\) \\(\\xi\\). Therefore, default setting plot.gev_influence, sep_xi = TRUE, separates plotting influence curve \\(\\xi\\) \\(\\mu\\) \\(\\sigma\\). example Examples shows extremely large block maxima strong positive influence MLE \\(\\hat{\\xi}\\) also extremely small block maxima strong negative influence \\(\\hat{\\xi}\\),","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/gev_influence.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"GEV influence curves — gev_influence","text":"Hampel, F. R., Ronchetti, E. M., Rousseeuw, P. J., Stahel, W. . (2005). Robust Statistics. Wiley-Interscience, New York. doi:10.1002/9781118186435 Davison, . C. Smith, R. L. (1990). Models exceedances high thresholds. Journal Royal Statistical Society: Series B (Methodological), 52(3):393–425. doi:10.1111/j.2517-6161.1990.tb01796.x","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/gev_influence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GEV influence curves — gev_influence","text":"","code":"# Influence curve for the default mu = 0, sigma = 1, xi = 0 case z <- seq(from = -3, to = 3, by = 0.01) inf <- gev_influence(z = z) plot(inf)   # Influence curves based on the adjusted fit to the Plymouth ozone data fit <- gev_mle(PlymouthOzoneMaxima) pars <- coef(fit) infp <- gev_influence(mu = pars[1], sigma = pars[2], xi = pars[3], z = z) plot(infp)"},{"path":"https://github.com/paulnorthrop/evmiss/reference/gev_mle.html","id":null,"dir":"Reference","previous_headings":"","what":"GEV ML Inference with Adjustment for Missing Data — gev_mle","title":"GEV ML Inference with Adjustment for Missing Data — gev_mle","text":"Fits GEV distribution block maxima using maximum likelihood estimation, option make adjustment numbers non-missing raw values block.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/gev_mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GEV ML Inference with Adjustment for Missing Data — gev_mle","text":"","code":"gev_mle(   data,   block_length,   block,   adjust = TRUE,   discard = 0,   init = \"quartiles\",   ... )"},{"path":"https://github.com/paulnorthrop/evmiss/reference/gev_mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GEV ML Inference with Adjustment for Missing Data — gev_mle","text":"data Either numeric vector containing time series raw data, object returned block_maxima, list components maxima, notNA n, data frame named list containing information (variables maxima, notNA n) object returned block_maxima, data frame BrestSurgeMaxima. block_length numeric scalar. Used calculate maxima disjoint blocks block_length contiguous values vector data. length(data) integer multiple block_length values end data constitute complete block length block_length discarded, without warning. block numeric vector length data. value block[] indicates block data[] falls. example, block provide year observation observed. adjust logical scalar numeric scalar [0, 100]. adjust = TRUE adjustment, described Details, numbers non-missing values underlying block maximum performed. adjust = FALSE adjustment made, , block maxima treated underlying raw data missing values. discard numeric scalar. block maximum greater discard percent underlying raw values missing discarded. Whether adjustment missingness made block maxima remain determined adjust. init Either character scalar, one \"quartiles\" \"moments\", numeric vector length 3 giving initial estimates GEV location, scale shape parameters: \\(\\mu\\), \\(\\sigma\\) \\(\\xi\\). init = \"quartiles\" initial estimates \\(\\mu\\) \\(\\sigma\\) based sample quartiles block maxima, ignoring underlying numbers non-missing raw data, value 0 \\(\\xi\\). init = \"moments\" instead use sample mean variance maxima initial value 0.1 \\(\\xi\\). ... arguments passed stats::optim.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/gev_mle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GEV ML Inference with Adjustment for Missing Data — gev_mle","text":"list, returned stats::optim (MLEs component par), additional components: loglik: value maximised log-likelihood. vcov: estimated variance-covariance matrix parameters. se: estimated standard errors parameters. maxima: vector block maxima used fit model. notNA: number non-missing raw values maxima maxima based. n: maximal block length, , largest number values observed blocks. adjust,discard : values input arguments. call gev_mle provided attribute \"call\". class returned object c(\"evmiss\", \"mle\", \"list\"). Objects inheriting class \"evmiss\" coef, logLik, nobs, summary, vcov confint methods.  See evmiss_methods.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/gev_mle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GEV ML Inference with Adjustment for Missing Data — gev_mle","text":"data numeric vector exactly one arguments block_length block must supplied. parameters fitted using maximum likelihood estimation. adjustment numbers non-missing values underlying block maxima based strong assumption missing values occur completely random. suppose block maximum \\(M_n\\) based full block length \\(n\\) \\(\\text{GEV}(\\mu, \\sigma, \\xi)\\) distribution, distribution function \\(G(x)\\). Let \\(n_i\\) number missing values block \\(\\) let \\(M_{n_i}\\) denote block maximum block. suppose \\(M_{n_i}\\) \\(\\text{GEV}(\\mu(n_i), \\sigma(n_i), \\xi)\\) distribution, $$\\mu(n_i) = \\mu + \\sigma [(n_i/n)^\\xi -1] / \\xi,$$ $$\\sigma(n_i) = \\sigma (n_i/n)^\\xi.$$ expressions based inferring parameters approximate GEV distribution \\(M_{n_i}\\) approximate distribution function \\([G(x)]^{n_i/n}\\). likelihood constructed product contributions maxima distinct blocks, assumption maxima independent. Let \\(\\theta = (\\mu, \\sigma, \\xi)\\) let \\(\\ell_F(\\underline{z}; \\theta)\\) denote usual, unadjusted, GEV log-likelihood full-data case missing values. can shown adjusted log-likelihood \\(\\ell(\\theta, \\underline{z})\\) given $$\\ell(\\theta, \\underline{z}) = \\ell_F(\\underline{z}; \\theta) -       \\sum_{=1}^n p_i \\log G(z_i; \\theta)$$ \\(p_i = 1 - n_i / n\\) proportion missing values block \\(\\). negated log-likelihood minimised using call stats::optim hessian = TRUE. stats::optim throws error warning produced returned object NA values components par, loglik, vcov se extra component optim_error containing error message. estimated observed information matrix singular warning produced returned object NA values components vcov se.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/gev_mle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GEV ML Inference with Adjustment for Missing Data — gev_mle","text":"","code":"## Simulate raw data from an exponential distribution  set.seed(13032025) blocks <- 50 block_length <- 365 sdata <- sim_data(blocks = blocks, block_length = block_length)  # sdata$data_full have no missing values # sdata$data_miss have had missing values created artificially  # Fit a GEV distribution to block maxima from the full data fit1 <- gev_mle(sdata$data_full, block_length = sdata$block_length) summary(fit1) #>  #> Call: #> gev_mle(data = sdata$data_full, block_length = sdata$block_length) #>  #>       Estimate Std. Error #> mu     5.82700     0.1769 #> sigma  1.08400     0.1306 #> xi    -0.01449     0.1243  # An identical fit supplying the block indicator instead of block_length fit1b <- gev_mle(sdata$data_full, block = sdata$block) summary(fit1b) #>  #> Call: #> gev_mle(data = sdata$data_full, block = sdata$block) #>  #>       Estimate Std. Error #> mu     5.82700     0.1769 #> sigma  1.08400     0.1306 #> xi    -0.01449     0.1243  # Make adjustment for the numbers of non-missing values per block fit2 <- gev_mle(sdata$data_miss, block_length = sdata$block_length) summary(fit2) #>  #> Call: #> gev_mle(data = sdata$data_miss, block_length = sdata$block_length) #>  #>       Estimate Std. Error #> mu     5.97300     0.1907 #> sigma  1.07400     0.1157 #> xi    -0.05945     0.1177  # Do not make the adjustment fit3 <- gev_mle(sdata$data_miss, block_length = sdata$block_length,                 adjust = FALSE) summary(fit3) #>  #> Call: #> gev_mle(data = sdata$data_miss, block_length = sdata$block_length,  #>     adjust = FALSE) #>  #>       Estimate Std. Error #> mu     5.66300     0.1785 #> sigma  1.10600     0.1295 #> xi    -0.06951     0.1152  # Remove all block maxima with greater than 25% missing values and # do not make the adjustment fit4 <- gev_mle(sdata$data_miss, block_length = sdata$block_length,                 adjust = FALSE, discard = 25) summary(fit4) #>  #> Call: #> gev_mle(data = sdata$data_miss, block_length = sdata$block_length,  #>     adjust = FALSE, discard = 25) #>  #>       Estimate Std. Error #> mu     5.67200     0.2454 #> sigma  1.08200     0.1845 #> xi    -0.01368     0.1880  ## Plymouth ozone data  # Calculate the values in Table 3 of Simpson and Northrop (2025) # discard = 50 is chosen to discard data from 2001 and 2006 fit1 <- gev_mle(PlymouthOzoneMaxima) fit2 <- gev_mle(PlymouthOzoneMaxima, adjust = FALSE) fit3 <- gev_mle(PlymouthOzoneMaxima, discard = 50) fit4 <- gev_mle(PlymouthOzoneMaxima, adjust = FALSE, discard = 50) se <- function(x) return(sqrt(diag(vcov(x)))) MLEs <- cbind(coef(fit1), coef(fit2), coef(fit3), coef(fit4)) SEs <- cbind(se(fit1), se(fit2), se(fit3), se(fit4)) round(MLEs, 2) #>         [,1]   [,2]   [,3]   [,4] #> mu    128.77 126.52 129.55 128.59 #> sigma  18.81  25.50  17.65  17.78 #> xi      0.00  -0.28   0.04   0.04 round(SEs, 2) #>       [,1] [,2] [,3] [,4] #> mu    4.40 5.53 4.60 4.55 #> sigma 2.63 4.00 3.41 3.61 #> xi    0.16 0.15 0.26 0.27"},{"path":"https://github.com/paulnorthrop/evmiss/reference/gev_return.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Level Inferences — gev_return","title":"Return Level Inferences — gev_return","text":"Calculates point estimates \\(m\\)-year return levels fitted model objects returned gev_mle.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/gev_return.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Level Inferences — gev_return","text":"","code":"gev_return(x, m = 100, npy = 1)"},{"path":"https://github.com/paulnorthrop/evmiss/reference/gev_return.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Level Inferences — gev_return","text":"x object inheriting class evmiss returned gev_mle. m numeric vector.  Values \\(m\\), return periods interest, years. npy numeric scalar.  number \\(n_{py}\\) block maxima per year. blocks length 1 year npy = 1.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/gev_return.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return Level Inferences — gev_return","text":"object class c(\"return_level\", \"numeric\", \"evmiss\"). numeric vector containing MLEs required return levels, names indicating return period. fitted model object returned gev_mle included attribute called \"gev_mle\". input arguments m npy also included attributes call gev_return.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/gev_return.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return Level Inferences — gev_return","text":"\\(\\xi \\neq 0\\), \\(m\\)-year return level given \\(z_m = \\mu + \\sigma (y_p ^ {-\\xi} - 1) / \\xi\\), \\(y_p = -\\log(1 - p)\\) \\(p = 1 - (1 - 1 / m) ^ {1 / n_{py}}\\). \\(\\xi = 0\\), \\(z_m = \\mu - \\sigma \\log y_p\\). Equivalently, note \\(z_m = \\mu - \\sigma BC(y_p, -\\xi)\\), \\(BC(x, \\lambda)\\) Box-Cox transformation.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/gev_return.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Return Level Inferences — gev_return","text":"Coles, S. G. (2001) Introduction Statistical Modeling Extreme Values, Springer-Verlag, London. doi:10.1007/978-1-4471-3675-0_3","code":""},{"path":[]},{"path":"https://github.com/paulnorthrop/evmiss/reference/gev_return.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return Level Inferences — gev_return","text":"","code":"## Simulate raw data from an exponential distribution  set.seed(13032025) blocks <- 50 block_length <- 365 sdata <- sim_data(blocks = blocks, block_length = block_length)  # sdata$data_full have no missing values # sdata$data_miss have had missing values created artificially  # Fit a GEV distribution to block maxima from the full data fit1 <- gev_mle(sdata$data_full, block_length = sdata$block_length) summary(fit1) #>  #> Call: #> gev_mle(data = sdata$data_full, block_length = sdata$block_length) #>  #>       Estimate Std. Error #> mu     5.82700     0.1769 #> sigma  1.08400     0.1306 #> xi    -0.01449     0.1243  # Make adjustment for the numbers of non-missing values per block fit2 <- gev_mle(sdata$data_miss, block_length = sdata$block_length) summary(fit2) #>  #> Call: #> gev_mle(data = sdata$data_miss, block_length = sdata$block_length) #>  #>       Estimate Std. Error #> mu     5.97300     0.1907 #> sigma  1.07400     0.1157 #> xi    -0.05945     0.1177  gev_return(fit1, m = c(100, 1000)) #>  100-year level 1000-year level  #>        10.65225        12.95378  gev_return(fit2, m = c(100, 1000)) #>  100-year level 1000-year level  #>        10.29673        12.05854   ## Plymouth ozone data  fit <- gev_mle(PlymouthOzoneMaxima) rl <- gev_return(fit, m = c(100, 200))  # Symmetric confidence intervals sym <- confint(rl)  # Profile-based confidence intervals  prof <- confint(rl, profile = TRUE) prof #>                    2.5%    97.5% #> 100-year level 180.8494 370.0531 #> 200-year level 185.1301 446.2398 plot(prof, digits = 4)  plot(prof, parm = 2, digits = 3)   # Doing this more quickly when we only care about the confidence limits prof <- confint(rl, profile = TRUE, mult = 32, faster = TRUE) plot(prof, digits = 3, type = \"b\")  plot(prof, parm = 2, digits = 3, type = \"b\")"},{"path":"https://github.com/paulnorthrop/evmiss/reference/PlymouthOzone.html","id":null,"dir":"Reference","previous_headings":"","what":"Ozone levels at Plymouth, UK — PlymouthOzone","title":"Ozone levels at Plymouth, UK — PlymouthOzone","text":"Daily maximum ozone levels Plymouth London (UK) years 1998-2024 inclusive.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/PlymouthOzone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ozone levels at Plymouth, UK — PlymouthOzone","text":"","code":"PlymouthOzone"},{"path":"https://github.com/paulnorthrop/evmiss/reference/PlymouthOzone.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Ozone levels at Plymouth, UK — PlymouthOzone","text":"PlymouthOzone data frame 9862 rows 3 variables: Date: class \"Date\" format YYYY-MM-DD. Year: Values 1998-2024. Ozone: daily maximum ozone level \\(\\mu\\)g/m\\(^3\\).","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/PlymouthOzone.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Ozone levels at Plymouth, UK — PlymouthOzone","text":"Department Environment Food Rural Affair (DEFRA). Plymouth Centre monitoring site UK-AIR database Data Selector.","code":""},{"path":[]},{"path":"https://github.com/paulnorthrop/evmiss/reference/PlymouthOzone.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ozone levels at Plymouth, UK — PlymouthOzone","text":"","code":"head(PlymouthOzone) #>           Date Year Ozone #> 95  1998-01-01 1998    56 #> 96  1998-01-02 1998    58 #> 97  1998-01-03 1998    54 #> 98  1998-01-04 1998    60 #> 99  1998-01-05 1998    58 #> 100 1998-01-06 1998    52  # Time series plot of annual maxima ozone levels plot(PlymouthOzone$Date, PlymouthOzone$Ozone, xlab = \"year\",      ylab = \"ozone (micrograms / metre cubed)\", pch = 16)"},{"path":"https://github.com/paulnorthrop/evmiss/reference/PlymouthOzoneMaxima.html","id":null,"dir":"Reference","previous_headings":"","what":"Annual maxima ozone levels at Plymouth, UK — PlymouthOzoneMaxima","title":"Annual maxima ozone levels at Plymouth, UK — PlymouthOzoneMaxima","text":"Annual maxima daily maximum ozone levels Plymouth Devon (UK) years 1998-2024 inclusive.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/PlymouthOzoneMaxima.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annual maxima ozone levels at Plymouth, UK — PlymouthOzoneMaxima","text":"","code":"PlymouthOzoneMaxima"},{"path":"https://github.com/paulnorthrop/evmiss/reference/PlymouthOzoneMaxima.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Annual maxima ozone levels at Plymouth, UK — PlymouthOzoneMaxima","text":"PlymouthOzoneMaxima data frame 27 rows (years 1998 2024) 4 variables: maxima: annual maximum ozone level \\(\\mu\\)g/m\\(^3\\). notNA : number days year raw data available. n : number days year (365 366). block : block number 1 year 1998 27 year 2024. row names PlymouthOzoneMaxima years 1998:2024. raw data missing approximately \\(10\\%\\) days.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/PlymouthOzoneMaxima.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Annual maxima ozone levels at Plymouth, UK — PlymouthOzoneMaxima","text":"Department Environment Food Rural Affair (DEFRA). Plymouth Centre monitoring site UK-AIR database Data Selector.","code":""},{"path":[]},{"path":"https://github.com/paulnorthrop/evmiss/reference/PlymouthOzoneMaxima.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annual maxima ozone levels at Plymouth, UK — PlymouthOzoneMaxima","text":"","code":"head(PlymouthOzoneMaxima) #>      maxima notNA   n block #> 1998    156   358 365     1 #> 1999    134   357 365     2 #> 2000    142   353 366     3 #> 2001     88   105 365     4 #> 2002    110   354 365     5 #> 2003    188   314 365     6  # Time series plot of annual maxima ozone levels plot(rownames(PlymouthOzoneMaxima), PlymouthOzoneMaxima$maxima,      ylab = \"ozone (micrograms / metre cubed)\", xlab = \"year\", pch = 16)   # Time series plot of proportion of non-missing days plot(rownames(PlymouthOzoneMaxima),      PlymouthOzoneMaxima$notNA / PlymouthOzoneMaxima$n,      ylab = \"proportion of non-missing days\", xlab = \"year\", pch = 16)   # Plot ozone levels against the proportion of non-missing days plot(PlymouthOzoneMaxima$notNA / PlymouthOzoneMaxima$n,      PlymouthOzoneMaxima$maxima,      ylab = \"ozone (micrograms / metre cubed)\",      xlab = \"proportion of non-missing days\", pch = 16)"},{"path":"https://github.com/paulnorthrop/evmiss/reference/return_level_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for objects of class ","title":"Methods for objects of class ","text":"Methods objects class \"return_level\" returned gev_return.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/return_level_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for objects of class ","text":"","code":"# S3 method for class 'return_level' coef(object, ...)  # S3 method for class 'return_level' print(x, ...)  # S3 method for class 'return_level' vcov(object, ...)  # S3 method for class 'return_level' summary(object, digits = max(3, getOption(\"digits\") - 3L), ...)  # S3 method for class 'summary.return_level' print(x, ...)  # S3 method for class 'return_level' confint(   object,   parm = 1:length(object),   level = 0.95,   profile = FALSE,   mult = 2,   faster = FALSE,   epsilon = 1e-04,   ... )"},{"path":"https://github.com/paulnorthrop/evmiss/reference/return_level_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for objects of class ","text":"object, x object inheriting class \"return_level\", result call gev_return. object named numeric vector MLEs return levels. print.summary.return_level, object returned function summary.return_level. ... arguments. used print.summary.return_level pass arguments print. digits integer. Passed signif round values summary. parm numeric vector. components, , return levels, object require confidence interval. level confidence level required.  numeric scalar (0, 1). profile logical scalar. TRUE confidence intervals based profile log-likelihood returned.  FALSE intervals based approximate large sample normal theory, symmetric MLE, returned. mult positive numeric scalar. Controls increment parameter interest increased/decreased profiling /MLE. increment mult * se / 100 se estimated standard error estimator return level. Decreasing mult profiles points slower. faster logical scalar. faster = TRUE profiling log-likelihood search lower (upper) confidence limit started corresponding symmetric lower (upper) confidence limit. epsilon relevant profile = TRUE. numeric vector values determine accuracy confidence limits. epsilon recycled length parameter vector parm. epsilon[] > 0 value passed argument epsilon itp::itp function, estimates parameter values profile log-likelihood parameter drops value defines confidence limits, profiling successful finding interval within value lies. epsilon[] < 0 quadratic interpolation used, tend faster. epsilon[] = 0 linear interpolation used, faster still.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/return_level_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Methods for objects of class ","text":"print.return_level coef.return_level: numeric vector containing MLEs return return levels. vcov.return_level: length(object) length(object) matrix row column names indicating return periods return levels. estimated variance-covariance matrix return levels object. diagonal elements give estimated variances associated individual return level estimates. summary.return_level: object containing original function call matrix estimates return levels associated estimated standard errors row names indicating respective return periods. object printed print.summary.return_level. print.summary.return_level: argument x returned, invisibly. confint.return_level: object class c(\"confint_return_level\", \"evmiss\"). numeric matrix 2 columns giving lower upper confidence limits return level. columns labelled (1-level)/2 1-(1-level)/2, expressed percentage, default 2.5% 97.5%. row names indicate return levels. profile = TRUE returned object extra attributes crit, level for_plot. latter named list length  parm components named return periods. components 2-column numeric matrix. first column contains values return level second column corresponding values profile log-likelihood. profile log-likelihood equal attribute crit limits confidence interval. attribute level input argument level.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/return_level_methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Methods for objects of class ","text":"confint.return_level, default, epsilon = -1, work well enough circumstances, achieve specific accuracy set epsilon small positive value, example, epsilon = 1e-4.","code":""},{"path":[]},{"path":"https://github.com/paulnorthrop/evmiss/reference/return_level_methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Methods for objects of class ","text":"","code":"## Plymouth ozone data  # See ?gev_return for confidence intervals for return levels fit <- gev_mle(PlymouthOzoneMaxima) rl <- gev_return(fit, m = c(100, 200)) rl #> 100-year level 200-year level  #>       215.5104       228.6658  vcov(rl) #>                100-year level 200-year level #> 100-year level        1123.37       1464.100 #> 200-year level        1464.10       1916.351 summary(rl) #>  #> Call: #> gev_return(x = fit, m = c(100, 200)) #>  #>                Estimate Std. Error #> 100-year level    215.5      33.52 #> 200-year level    228.7      43.78"},{"path":"https://github.com/paulnorthrop/evmiss/reference/sim_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate raw data — sim_data","title":"Simulate raw data — sim_data","text":"Simulates data user-supplied distribution creates missing values artificially. Functions mcar mcar2 provides example mechanisms based Missing Completely Random (MCAR) assumption.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/sim_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate raw data — sim_data","text":"","code":"sim_data(   blocks = 50,   block_length = 365,   distn = \"exp\",   missing_fn = mcar,   missing_args = formals(missing_fn)$missing_args,   ... )  mcar(   sim_data,   blocks,   block_length,   missing_args = list(p0miss = 0, min = 0, max = 0.5) )  mcar2(sim_data, missing_args = list(pmiss = 0.5))"},{"path":"https://github.com/paulnorthrop/evmiss/reference/sim_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate raw data — sim_data","text":"blocks numeric scalar. number blocks data required. Usually, positive integer, blocks = 0 returns list containing input arguments, particular, distn, distn_args block_length. feature provided simulation setup can replicated sim_study without actually simulating data. block_length numeric scalar. number raw observations per block. distn character scalar. Specifies distribution raw data simulated. name xxx part dxxx, pxxx, qxxx rxxx distributional functions stats package. See stats::Distributions. missing_fn function simulate positions missing values within block year. See Details. missing_args Arguments passed missing_fn. missing_fn mcar subset p0miss, min max may supplied list missing_args. values remaining components set default values. ... arguments function stats::rxxx. argument n set within sim_data equal block_length * blocks. sim_data numeric vector raw observations , made missing.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/sim_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate raw data — sim_data","text":"blocks > 0, list following components: data_full: simulated raw data missing values. data_miss: simulated data missing values created. blocks, block_length: respective input values blocks block_length. block: block indicator vector, suitable argument gev_mle. distn: input argument distn. distn_args: arguments stats::rxxx supplied via .... blocks = 0, list containing inputs arguments.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/sim_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate raw data — sim_data","text":"function missing_fn must return , possibly empty, subset c(1, 2, ..., block_length). function applied within simulated block, independently blocks. default function mcar simulates numbers missing values blocks follows. proportion p0miss blocks missing values. blocks, number missing values ceiling(prop_miss * block_length), prob_miss value simulated Uniform(min, max) distribution. positions missing values within block random. function mcar2 identifies random proportionmmpmiss simulated raw observations become missing. Care may need taken simulated data used input gev_mle using approach discards block maxima based certain percentage  missing values, , discard > 0. example, using default argument blocks = 50 missing_fn = mcar, default missing_args, may result sample size retained block maxima contains insufficient information make reliable inferences, leading difficulties finding appropriate MLE shape parameter \\(\\xi\\) /singular observed information matrix.","code":""},{"path":[]},{"path":"https://github.com/paulnorthrop/evmiss/reference/sim_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate raw data — sim_data","text":"","code":"# Using missing_fn = mcar sdata <- sim_data()  # Using missing_fn = mcar2 sdata2 <- sim_data(missing_fn = mcar2)"},{"path":"https://github.com/paulnorthrop/evmiss/reference/sim_study.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulation study — sim_study","title":"Simulation study — sim_study","text":"Performs simulation study compare different approaches fitting GEV distribution block maxima missing values underlying raw data. Plot summary methods enables comparisons approaches made. See sim_study_methods.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/sim_study.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation study — sim_study","text":"","code":"sim_study(   nsim,   return_periods,   discard = 25,   level = 0.95,   profile = FALSE,   mult = 32,   faster = TRUE,   epsilon = -1,   quiet = TRUE,   timeout = 10,   ... )"},{"path":"https://github.com/paulnorthrop/evmiss/reference/sim_study.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulation study — sim_study","text":"nsim numeric scalar. number simulated datasets. return_periods numeric vector return periods estimates confidence intervals corresponding return levels required. discard numeric scalar. used described gev_mle discard block maxima based discard percentage missing data. level numeric scalar (0,1). confidence level required confidence intervals, passed confint.evmiss. profile logical scalar. TRUE confidence intervals based profile log-likelihood included returned object. profile = TRUE simulations take far longer run. arguments mult, faster epsilon tuning parameters profiling algorithm. mult positive numeric scalar. Controls increment parameter interest increased/decreased profiling /MLE. increment mult * se / 100 se estimated standard error estimator parameter. Decreasing mult profiles points slower. default, mult = 2 sufficiently small produce smooth looking plot profile log-likelihood using plot.confint_gev. estimate confidence limits quickly, value mult can increased /argument faster set TRUE. faster logical scalar. faster = TRUE profiling log-likelihood search lower (upper) confidence limit started corresponding symmetric lower (upper) confidence limit. epsilon relevant profile = TRUE. numeric vector values determine accuracy confidence limits. epsilon recycled length parameter vector parm. epsilon[] > 0 value passed argument epsilon itp::itp function, estimates parameter values profile log-likelihood parameter drops value defines confidence limits, profiling successful finding interval within value lies. epsilon[] < 0 quadratic interpolation used, tend faster. epsilon[] = 0 linear interpolation used, faster still. quiet logical scalar. quiet = FALSE number current simulated dataset printed console. Otherwise, nothing printed. timeout Argument timeout passed R.utils::withTimeout. relevant profile = TRUE return_periods supplied. call confint.return_level takes longer timeout seconds calculation terminated NA values returned confidence limits. ... arguments passed sim_data.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/sim_study.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulation study — sim_study","text":"list class c(\"sim_study\", \"list\"), following components. parameters: 12 nsim matrix. Column gives results simulation number . rows contain 3 sets estimates \\(\\mu\\), \\(\\sigma\\) \\(\\xi\\), follows. rows 1-3 (full): using full data, , missing values. rows 4-6 (adjust): adjustment number non-missing values. rows 7-9 (naive): adjustment number non-missing values. rows 10-12 (discard): block maxima may discarded. ses, lower_sym, upper_sym, lower_prof, upper_prof: objects structure parameters, containing corresponding estimates standard errors lower upper limits 100level% confidence intervals. lower_prof upper_prof included profile = TRUE. rl_ses, rl_lower_sym, rl_upper_sym, rl_lower_prof, rl_upper_prof: analogous objects immediately relating return levels interest. rl_lower_prof rl_upper_prof included profile = TRUE. nsim: input value nsim. distn: name distribution data simulated, , argument distn passed sim_data. distn_args: user-supplied arguments distn. block_length: block length used create simulated block maxima. return_periods: input argument return_periods. true_return_levels: vector containing true level component return_periods. row column names matrices parameters return_levels help describe contained matrix. simulation settings, generated call sim_data blocks = 0 provided, attribute named \"sim_data_args\".","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/sim_study.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulation study — sim_study","text":"simulation study based raw data simulated user-supplied probability distribution. Missing values created full data produce reduced raw dataset. Samples block maxima created two datasets. See sim_data. Three approaches taken estimate 3 parameters GEV distribution used model block maxima. case, parameters estimated using maximum likelihood estimation, described . See also gev_mle. Full. Using full data. Adjust. Using reduced dataset, adjustment numbers non-missing values underlying block maximum. Naive. Using reduced dataset, adjustment made presence missing raw values. Discard. block maximum greater discard percent underlying raw values missing discarded adjustment made. arguments mult = 32, faster = TRUE epsilon = -1 passed confint.evmiss set aim calculating quickly confidence intervals based profile log-likelihood (profile = TRUE). However, large simulation study setting faster = FALSE may reliable may prevent convergence issues simulated datasets.","code":""},{"path":[]},{"path":"https://github.com/paulnorthrop/evmiss/reference/sim_study.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulation study — sim_study","text":"","code":"# In practice, increasing nsim to 1000, say, is suggested set.seed(12345)  #### Exponential data res <- sim_study(nsim = 50, return_periods = c(100, 1000), discard = 25)  ### Plots  ## Return levels  # Marginal 100-block return level estimates by approach plot(res)   # Compare 100-block return level estimates between approaches plot(res, distn = \"joint\")   ## GEV parameter estimates  # (a) Each parameter marginally, by approach plot(res, what = \"mu\")  plot(res, what = \"sigma\")  plot(res, what = \"xi\")   # (b) Each parameter, comparing approaches plot(res, what = \"mu\", distn = \"joint\")  plot(res, what = \"sigma\", distn = \"joint\")  plot(res, what = \"xi\", distn = \"joint\")   # All parameters marginally, for each approach plot(res, what = \"all\", approach = \"full\")  plot(res, what = \"all\", approach = \"naive\")  plot(res, what = \"all\", approach = \"adjust\")  plot(res, what = \"all\", approach = \"discard\")   # All parameters, comparing pairs of different approaches plot(res, what = \"all\", distn = \"joint\", approach = c(\"full\", \"adjust\"),      vertical = FALSE)  plot(res, what = \"all\", distn = \"joint\", approach = c(\"adjust\", \"naive\"),      vertical = FALSE)  plot(res, what = \"all\", distn = \"joint\", approach = c(\"adjust\", \"discard\"),      vertical = FALSE)   ### Summaries  ## GEV parameter estimates  # Comparison to what would be obtained from the full dataset summary(res) #>  #> Call: #> summary.evmiss_sim_study(object = res) #>  #>                              mu        sigma           xi #> bias,adjust         -0.02971768  0.005540924  0.011477016 #> bias,naive          -0.33348632  0.028073818 -0.004436578 #> bias,discard        -0.11284213 -0.016571757 -0.032669671 #> sd,adjust            0.09408087  0.078692990  0.083157879 #> sd,naive             0.09594831  0.088741469  0.083109443 #> sd,discard           0.20835560  0.171469168  0.156154284 #> rmse,adjust          0.09776158  0.078098891  0.083118289 #> rmse,naive           0.34674930  0.092226280  0.082393684 #> rmse,discard         0.23511096  0.170552822  0.157999318 #> median_bias,adjust  -0.02768807  0.010619613  0.009718407 #> median_bias,naive   -0.32316146  0.045845386 -0.006228680 #> median_bias,discard -0.13840627 -0.034639349 -0.006093888 #> iqr,adjust           0.13134064  0.064760903  0.093964235 #> iqr,naive            0.09232500  0.134221664  0.081747247 #> iqr,discard          0.26139553  0.212108985  0.184119907 #> mae,adjust           0.07694070  0.058404502  0.062774961 #> mae,naive            0.33348632  0.080407347  0.061358095 #> mae,discard          0.20102487  0.136232027  0.115837595 #> isNA,adjust          0.00000000  0.000000000  0.000000000 #> isNA,naive           0.00000000  0.000000000  0.000000000 #> isNA,discard         0.00000000  0.000000000  0.000000000 # Comparison with a penultimate approximation summary(res, vsfull = FALSE) #>  #> Call: #> summary.evmiss_sim_study(object = res, vsfull = FALSE) #>  #>                               mu         sigma           xi #> bias,full           -0.003839986 -0.0278597431  0.007790091 #> bias,adjust         -0.033557669 -0.0223188192  0.019267107 #> bias,naive          -0.337326303  0.0002140746  0.003353513 #> bias,discard        -0.116682118 -0.0444314999 -0.024879580 #> sd,full              0.171366225  0.1042391559  0.119435053 #> sd,adjust            0.181173355  0.1121491021  0.112824824 #> sd,naive             0.181756862  0.1248581050  0.114293505 #> sd,discard           0.274357871  0.2004838735  0.199664994 #> rmse,full            0.169687362  0.1068861585  0.118491024 #> rmse,adjust          0.182464862  0.1132431118  0.113340520 #> rmse,naive           0.382313851  0.1236034032  0.113194484 #> rmse,discard         0.295603642  0.2033815775  0.199217923 #> median_bias,full    -0.029151248 -0.0396456609  0.005521644 #> median_bias,adjust  -0.014729294 -0.0262364061  0.013937393 #> median_bias,naive   -0.322532299  0.0061424001  0.013259862 #> median_bias,discard -0.114827063 -0.0515110337 -0.020418590 #> iqr,full             0.254301659  0.1311864912  0.128656835 #> iqr,adjust           0.260346039  0.1598136807  0.134456547 #> iqr,naive            0.256441257  0.1988598654  0.135090267 #> iqr,discard          0.374511341  0.2882915300  0.192845955 #> mae,full             0.144175428  0.0865922318  0.092610775 #> mae,adjust           0.143941034  0.0918008426  0.090542135 #> mae,naive            0.341211780  0.1015589837  0.089672794 #> mae,discard          0.233671262  0.1656333584  0.152840558 #> isNA,full            0.000000000  0.0000000000  0.000000000 #> isNA,adjust          0.000000000  0.0000000000  0.000000000 #> isNA,naive           0.000000000  0.0000000000  0.000000000 #> isNA,discard         0.000000000  0.0000000000  0.000000000  ##  Return levels  # Comparison to what would be obtained from the full dataset summary(res, what = \"return\", return_period = c(100, 1000)) #>  #> Call: #> summary.evmiss_sim_study(object = res, what = \"return\", return_period = c(100,  #>     1000)) #>  #>                     100-year return level 1000-year return level #> bias,adjust                     0.1338941             0.31124101 #> bias,naive                     -0.2857942            -0.37258118 #> bias,discard                   -0.2823538            -0.06670583 #> sd,adjust                       0.7959645             2.23852312 #> sd,naive                        0.7400999             2.02363763 #> sd,discard                      1.3593917             3.64364309 #> rmse,adjust                     0.7992596             2.23777502 #> rmse,naive                      0.7864294             2.03765154 #> rmse,discard                    1.3750311             3.60763938 #> median_bias,adjust              0.1858141             0.23345390 #> median_bias,naive              -0.1531247            -0.21822221 #> median_bias,discard            -0.4439982            -0.42997635 #> iqr,adjust                      0.9250834             1.84839863 #> iqr,naive                       0.9472337             1.91217151 #> iqr,discard                     1.8061014             3.33523390 #> mae,adjust                      0.6066761             1.54091701 #> mae,naive                       0.5704983             1.45369248 #> mae,discard                     1.1003469             2.52357506 #> isNA,adjust                     0.0000000             0.00000000 #> isNA,naive                      0.0000000             0.00000000 #> isNA,discard                    0.0000000             0.00000000  # Comparison with a penultimate approximation summary(res, what = \"return\", return_period = c(100, 1000), vsfull = FALSE) #>  #> Call: #> summary.evmiss_sim_study(object = res, what = \"return\", return_period = c(100,  #>     1000), vsfull = FALSE) #>  #>                     100-year return level 1000-year return level #> bias,full                      0.14925733              0.7678878 #> bias,adjust                    0.28315139              1.0791288 #> bias,naive                    -0.13653691              0.3953066 #> bias,discard                  -0.13309652              0.7011819 #> sd,full                        1.24978525              3.3256363 #> sd,adjust                      1.35168836              3.4911734 #> sd,naive                       1.12824863              2.9490215 #> sd,discard                     1.83593058              5.0337124 #> rmse,full                      1.24619487              3.3805786 #> rmse,adjust                    1.36773349              3.6206415 #> rmse,naive                     1.12522371              2.9460245 #> rmse,discard                   1.82234546              5.0322113 #> median_bias,full               0.03182451              0.2036225 #> median_bias,adjust             0.05210663              0.2318654 #> median_bias,naive             -0.35517359             -0.1829064 #> median_bias,discard           -0.41121698             -0.5478823 #> iqr,full                       1.45106005              3.2602849 #> iqr,adjust                     1.83618493              4.2763547 #> iqr,naive                      1.50931836              3.5145841 #> iqr,discard                    2.08413213              5.6041252 #> mae,full                       0.94110029              2.3387866 #> mae,adjust                     1.02879180              2.5172677 #> mae,naive                      0.91453792              2.1899685 #> mae,discard                    1.47064799              3.4850419 #> isNA,full                      0.00000000              0.0000000 #> isNA,adjust                    0.00000000              0.0000000 #> isNA,naive                     0.00000000              0.0000000 #> isNA,discard                   0.00000000              0.0000000  # Example of a user-defined statistics function stat_fn <- function(x) {   return(c(mean = mean(x, na.rm = TRUE), sd = sd(x, na.rm = TRUE))) } summary(res, what = \"return\", statistics = stat_fn) #>  #> Call: #> summary.evmiss_sim_study(object = res, what = \"return\", statistics = stat_fn) #>  #>              100-year return level 1000-year return level #> mean,adjust              0.1338941             0.31124101 #> mean,naive              -0.2857942            -0.37258118 #> mean,discard            -0.2823538            -0.06670583 #> sd,adjust                0.7959645             2.23852312 #> sd,naive                 0.7400999             2.02363763 #> sd,discard               1.3593917             3.64364309  #### Normal data  res <- sim_study(nsim = 50, distn = \"norm\") plot(res)  summary(res, what = \"return\", return_period = c(100, 1000)) #>  #> Call: #> summary.evmiss_sim_study(object = res, what = \"return\", return_period = c(100,  #>     1000)) #>  #>                     100-year return level 1000-year return level #> bias,adjust                   0.053600129            0.134791049 #> bias,naive                   -0.019047339            0.041619887 #> bias,discard                 -0.033148840            0.027804247 #> sd,adjust                     0.198918601            0.502021789 #> sd,naive                      0.177874838            0.461368402 #> sd,discard                    0.243497104            0.557371611 #> rmse,adjust                   0.204083835            0.514931050 #> rmse,naive                    0.177114285            0.458623813 #> rmse,discard                  0.243318450            0.552469842 #> median_bias,adjust            0.044679395            0.082608287 #> median_bias,naive            -0.003284024            0.024593172 #> median_bias,discard          -0.012996795            0.000804812 #> iqr,adjust                    0.120857345            0.274562594 #> iqr,naive                     0.117635172            0.230124355 #> iqr,discard                   0.217267031            0.480510699 #> mae,adjust                    0.132998679            0.309433674 #> mae,naive                     0.110236850            0.265913996 #> mae,discard                   0.164905141            0.367073189 #> isNA,adjust                   0.000000000            0.000000000 #> isNA,naive                    0.000000000            0.000000000 #> isNA,discard                  0.000000000            0.000000000"},{"path":"https://github.com/paulnorthrop/evmiss/reference/sim_study_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for objects of class ","title":"Methods for objects of class ","text":"Methods objects class \"evmiss_sim_study\" returned sim_study.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/sim_study_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for objects of class ","text":"","code":"# S3 method for class 'evmiss_sim_study' plot(   x,   what = c(\"return\", \"mu\", \"sigma\", \"xi\", \"all\"),   distn = c(\"marginal\", \"joint\"),   approach = c(\"full\", \"adjust\", \"naive\", \"discard\"),   return_period = 100,   vertical = TRUE,   main = c(\"full\", \"adjust\", \"naive\", \"discard\"),   penultimate = TRUE,   line_col = c(\"orange\", \"purple\", \"red\", \"blue\"),   line_lty = c(1, 1, 2, 3),   legend = 4,   mar = c(5, 5, 2, 2),   layout = FALSE,   no_ylab = FALSE,   ... )  # S3 method for class 'evmiss_sim_study' summary(   object,   ...,   what = c(\"all\", \"return\"),   return_period,   statistics,   meanSE = FALSE,   log = FALSE,   log_return = FALSE,   vsfull = TRUE )  # S3 method for class 'summary.evmiss_sim_study' print(x, quiet = FALSE, ...)  tab(object, ...)  # S3 method for class 'evmiss_sim_study' tab(object, return_period, ...)"},{"path":"https://github.com/paulnorthrop/evmiss/reference/sim_study_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for objects of class ","text":"x, object object inheriting class \"evmiss_sim_study\", result call function sim_study. plot.evmiss_sim_study, arguments passed plot.default abline, graphical parameters. character scalar. plotted? See distn details. default \"return\" plot method \"\" summary method. \"return\": estimates return levels using approaches \"full\", \"adjust\", \"naive\" \"discard\". \"mu\" , \"sigma\", \"xi\" \"\". name parameter whose estimates plotted. Use \"\" select 3 GEV parameters. distn character scalar. default \"marginal\". \"marginal\": 4 histograms point estimates. = \"return\" 4 histograms point estimates required return level produced, one plot approaches \"full\", \"adjust\", \"naive\" \"discard\". = \"\" 3 histograms respective point estimates GEV parameters \\(\\mu\\), \\(\\sigma\\) \\(\\xi\\) produced, approach supplied approach. = \"mu\", \"sigma\" \"xi\" 4 histograms point estimates chosen GEV parameter produced, one approaches \"full\", \"adjust\", \"naive\" \"discard\". \"joint\": = \"return\" = \"mu\", \"sigma\" \"xi\" pairs used produce matrix scatter plots compare estimates produced approaches. = \"\" 3 scatter plots produced, one GEV parameters \\(\\mu\\), \\(\\sigma\\) \\(\\xi\\), compare estimates 2 approaches supplied approach. approach character scalar vector. proper subset c(\"full\", \"adjust\", \"naive\", \"discard\"). relevant \"\". distn = \"marginal\" default \"full\". distn = \"joint\" default c(\"full\", \"adjust\"). return_period Either numeric scalar (plot.evmiss_sim_study) numeric vector (summary.evmiss_sim_study tab.evmiss_sim_study). return period periods, numbers blocks, compare four estimation approaches. values must greater 1. vertical logical scalar. relevant distn = \"marginal\" distn = \"joint\" == \"\". vertical = TRUE plots arranged vertically. Otherwise, 4 plots 2 rows 2 plots 3 plots arranged horizontally. main character vector. Titles histograms. penultimate logical scalar.  distn = \"marginal\" lines added plots indicate GEV parameter values, implied return levels, penultimate approximation based simulation distribution block length. See mev::smith.penult. line_col vector giving colours lines added plots distn = \"marginal\". line_col[1]: sample median estimates; line_col[2]: sample mean estimates; line_col[3]: true return level (= \"return\"); line_col[4]: value penultimate approximation (penultimate = TRUE). line_lty numeric vector giving line types vertical lines. legend numeric vector length 4. 4 plots legend relating vertical lines placed. default final plot, \"discard\" plot. mar numeric vector. number lines margin four sides plots. See par. layout logical scalar. Set layout = TRUE layout used create multi-plot layout external call plot.evmiss_sim_study. no_ylab logical scalar. no_ylab = TRUE axis labels placed vertical axis. ... arguments. used following cases. plot.evmiss_sim_study: pass graphical parameters graphical functions plot, hist. print.summary.evmiss_sim_study: quiet = FALSE, pass arguments print, digits. tab.evmiss_sim_study: pass arguments summary.evmiss_sim_study, vsfull. statistics function used calculate statistics summarise differences estimates quantities described vsfull . object returned function named vector. See Examples. statistics missing default calculate following sample statistics: mean, standard deviation, root mean squared error, median, inter-quartile range, mean absolute error isNA, number simulations GEV parameter MLEs missing owing convergence problem. meanSE logical scalar. meanSE = TRUE vsfull = FALSE sample mean estimated standard errors simulated datasets added output summary statistics. Otherwise, added comparison sample standard deviation estimator meanSE valid vsfull = FALSE. log logical scalar. log = TRUE make comparisons GEV scale parameter \\(\\sigma\\) based estimate \\(\\log \\sigma.\\) Otherwise, based estimates \\(\\sigma\\). log_return logical scalar. log_return = TRUE make comparisons return levels log scale. Otherwise, use original return level scale. vsfull logical scalar. vsfull = TRUE comparisons made relative estimates \"full\" case, , fitting data missing values. vsfull = FALSE comparisons made relative true values (= \"return\") penultimate approximations GEV parameter values (= \"\"). quiet logical scalar. quiet = TRUE print summary console.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/sim_study_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Methods for objects of class ","text":"Plot method. return value, plots produced. Summary method. list object, class c(\"summary.evmiss_sim_study\", \"list\"), containing original function call summary.evmiss_sim_study following components, depending vsfull. = \"\", matrices full_gev, adjust_gev naive_gev. Columns 1 3 contain values summary statistics relating estimates \\(\\mu\\), \\(\\sigma\\), \\(\\xi\\) respectively. = \"return\", matrices full_rl, adjust_rl, naive_rl. columns contain values summary statistics return levels corresponding return periods return_period. object printed print.summary.evmiss_sim_study. rows matrices described interleaved values summary statistic printed adjacent rows. vsfull = TRUE values full_gev full_rl zero therefore included printing. elements vector returned function statistics named, names included row names. Otherwise, names used stat1, stat2 etc.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/sim_study_methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Methods for objects of class ","text":"Plot method. S3 plot method provides plots compare 4 approaches based point estimates produce return levels GEV parameters. Optionally, penultimate = TRUE, comparisons can made penultimate GEV approximation true distribution relevant block maxima. easiest way appreciate various plotting options available look examples sim_study. Summary method. matrix containing values statistics statistics used summarise performance estimators GEV parameters (= \"\") return levels (`= \"return\"). columns relate GEV parameters return levels. group 4 rows relates different combination summary statistic estimator (approach dealing missingness), indicated row names. Table method, tab. Creates table results row estimator. vsfull = FALSE passed summary.evmiss_sim_study first row relates \"full\" approach. Otherwise, \"adjust\", \"naive\" \"discard\" included. return_period supplied statistics concern estimation return periods statistics included mean, standard deviation, root mean squared error, median, inter-quartile range mean absolute error. Otherwise, statistics concern estimation GEV parameters statistics included mean, standard deviation root mean squared error.","code":""},{"path":"https://github.com/paulnorthrop/evmiss/reference/sim_study_methods.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Methods for objects of class ","text":"See sim_study.","code":""},{"path":[]}]
