% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim_study.R
\name{sim_study}
\alias{sim_study}
\title{Simulation study}
\usage{
sim_study(
  nsim,
  return_periods,
  discard = 25,
  level = 0.95,
  profile = FALSE,
  mult = 32,
  faster = TRUE,
  epsilon = -1,
  quiet = TRUE,
  timeout = 10,
  ...
)
}
\arguments{
\item{nsim}{A numeric scalar. The number of simulated datasets.}

\item{return_periods}{A numeric vector of return periods for which estimates
and confidence intervals for the corresponding return levels are
required.}

\item{discard}{A numeric scalar. This is used as described in \code{\link{gev_mle}}
to discard block maxima based on more than \code{discard} percentage of missing
data.}

\item{level}{A numeric scalar in (0,1). The confidence level required for
confidence intervals, to be passed to \code{\link{confint.evmiss}}.}

\item{profile}{A logical scalar. If \code{TRUE} then confidence intervals based
on a profile log-likelihood are included in the returned object. If
\code{profile = TRUE} then the simulations will take far longer to run.
The arguments \code{mult}, \code{faster} and \code{epsilon} are tuning parameters of the
profiling algorithm.}

\item{mult}{A positive numeric scalar. Controls the increment by which the
parameter of interest is increased/decreased when profiling above/below
its MLE. The increment is \code{mult * se / 100} where \code{se} is the estimated
standard error of the estimator of the parameter. Decreasing \code{mult}
profiles at more points but will be slower. The default, \code{mult = 2} should
be sufficiently small to produce a smooth looking plot of the profile
log-likelihood using \code{\link{plot.confint_gev}}. To estimate the confidence
limits more quickly, the value of \code{mult} can be increased and/or the
argument \code{faster} set to \code{TRUE}.}

\item{faster}{A logical scalar. If \code{faster = TRUE} then the profiling of the
log-likelihood in search of a lower (upper) confidence limit is started at
the corresponding symmetric lower (upper) confidence limit.}

\item{epsilon}{Only relevant if \code{profile = TRUE}. A numeric vector of values
that determine the accuracy of the confidence limits. \code{epsilon} is
recycled to the length of the parameter vector \code{parm}.
\itemize{
\item If \code{epsilon[i] > 0} then this value is passed as the argument \code{epsilon}
to the \code{\link[itp:itp]{itp::itp}} function, which estimates the parameter values for
which the profile log-likelihood for parameter \code{i} drops to the value
that defines the confidence limits, once profiling has been successful
in finding an interval within which this value lies.
\item If \code{epsilon[i] < 0} quadratic interpolation is used, which will tend to
be faster.
\item If \code{epsilon[i] = 0} then linear interpolation is used, which will be
faster still.
}}

\item{quiet}{A logical scalar. If \code{quiet = FALSE} then the number of the
current simulated dataset is printed to the console. Otherwise, nothing is
printed.}

\item{timeout}{Argument \code{timeout} passed to \code{\link[R.utils:withTimeout]{R.utils::withTimeout}}.
Only relevant if \code{profile = TRUE} and \code{return_periods} is supplied.
If a call to \code{\link{confint.return_level}} takes longer than \code{timeout} seconds
then the calculation is terminated and \code{NA} values returned for the
confidence limits.}

\item{...}{Further arguments to be passed to \code{\link{sim_data}}.}
}
\value{
A list with class \code{c("sim_study", "list")}, with the
following components.
\itemize{
\item \code{parameters}: a \code{12} by \code{nsim} matrix. Column \code{i} gives results
for simulation number \code{i}. The rows contain 3 sets of estimates of
\eqn{\mu}, \eqn{\sigma} and \eqn{\xi}, as follows.
\itemize{
\item rows 1-3 (\code{full}): using the full data, that is, with no
missing values.
\item rows 4-6 (\code{adjust}): with adjustment for the number of non-missing
values.
\item rows 7-9 (\code{naive}): no adjustment for the number of non-missing
values.
\item rows 10-12 (\code{discard}): some block maxima may be discarded.
}
\item \code{ses}, \code{lower_sym}, \code{upper_sym}, \code{lower_prof}, \code{upper_prof}: objects
with the same structure as \code{parameters}, containing the corresponding
estimates standard errors and lower and upper limits of 100\code{level}\%
confidence intervals. \code{lower_prof} and \code{upper_prof} are included only
if \code{profile = TRUE}.
\item \code{rl_ses}, \code{rl_lower_sym}, \code{rl_upper_sym}, \code{rl_lower_prof},
\code{rl_upper_prof}: analogous to the objects immediately above but
relating to the return levels of interest. \code{rl_lower_prof} and
\code{rl_upper_prof} are included only if \code{profile = TRUE}.
\item \code{nsim}: the input value of \code{nsim}.
\item \code{distn}: the name of the distribution from which data are simulated,
that is, the argument \code{distn} passed to \code{\link{sim_data}}.
\item \code{distn_args}: user-supplied arguments for \code{distn}.
\item \code{block_length}: the block length used to create simulated block maxima.
\item \code{return_periods}: the input argument \code{return_periods}.
\item \code{true_return_levels}: a vector containing the true level for each
component of \code{return_periods}.
}

The row and column names of the matrices \code{parameters} and \code{return_levels}
help to describe what is contained in the matrix.

The simulation settings, generated by a call to \code{\link{sim_data}} with
\code{blocks = 0} are provided, as an attribute named \code{"sim_data_args"}.
}
\description{
Performs a simulation study to compare different approaches to fitting a
GEV distribution to block maxima when there are missing values in the
underlying raw data. Plot and summary methods enables comparisons of these
approaches to be made. See \code{\link{sim_study_methods}}.
}
\details{
The simulation study is based on raw data simulated from a
user-supplied probability distribution. Missing values are created in
these full data to produce a reduced raw dataset. Samples of block maxima
are created from each of these two datasets. See \code{\link{sim_data}}.
Three approaches are taken to estimate the 3 parameters of GEV
distribution used to model these block maxima. In each case, parameters
are estimated using maximum likelihood estimation, as described below.
See also \code{\link{gev_mle}}.
\itemize{
\item \strong{Full}. Using the full data.
\item \strong{Adjust}. Using the reduced dataset, with an adjustment for the
numbers of non-missing values underlying each block maximum.
\item \strong{Naive}. Using the reduced dataset, with no adjustment made for the
presence of missing raw values.
\item \strong{Discard}. Any block maximum for which greater than \code{discard} percent
of the underlying raw values were missing is discarded and no further
adjustment is made.
}

The arguments \verb{mult = 32, faster = TRUE} and \code{epsilon = -1} passed to
\code{\link{confint.evmiss}} are set with the aim of calculating quickly confidence
intervals based on a profile log-likelihood (if \code{profile = TRUE}). However,
for a large simulation study setting \code{faster = FALSE} may be more reliable
because it may prevent convergence issues for some simulated datasets.
}
\examples{
# In practice, increasing nsim to 1000, say, is suggested
set.seed(12345)

#### Exponential data
res <- sim_study(nsim = 50, return_periods = c(100, 1000), discard = 25)

### Plots

## Return levels

# Marginal 100-block return level estimates by approach
plot(res)

# Compare 100-block return level estimates between approaches
plot(res, distn = "joint")

## GEV parameter estimates

# (a) Each parameter marginally, by approach
plot(res, what = "mu")
plot(res, what = "sigma")
plot(res, what = "xi")

# (b) Each parameter, comparing approaches
plot(res, what = "mu", distn = "joint")
plot(res, what = "sigma", distn = "joint")
plot(res, what = "xi", distn = "joint")

# All parameters marginally, for each approach
plot(res, what = "all", approach = "full")
plot(res, what = "all", approach = "naive")
plot(res, what = "all", approach = "adjust")
plot(res, what = "all", approach = "discard")

# All parameters, comparing pairs of different approaches
plot(res, what = "all", distn = "joint", approach = c("full", "adjust"),
     vertical = FALSE)
plot(res, what = "all", distn = "joint", approach = c("adjust", "naive"),
     vertical = FALSE)
plot(res, what = "all", distn = "joint", approach = c("adjust", "discard"),
     vertical = FALSE)

### Summaries

## GEV parameter estimates

# Comparison to what would be obtained from the full dataset
summary(res)
# Comparison with a penultimate approximation
summary(res, vsfull = FALSE)

##  Return levels

# Comparison to what would be obtained from the full dataset
summary(res, what = "return", return_period = c(100, 1000))

# Comparison with a penultimate approximation
summary(res, what = "return", return_period = c(100, 1000), vsfull = FALSE)

# Example of a user-defined statistics function
stat_fn <- function(x) {
  return(c(mean = mean(x, na.rm = TRUE), sd = sd(x, na.rm = TRUE)))
}
summary(res, what = "return", statistics = stat_fn)

#### Normal data

res <- sim_study(nsim = 50, distn = "norm")
plot(res)
summary(res, what = "return", return_period = c(100, 1000))
}
\seealso{
\code{\link{sim_study_methods}}.
}
